#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFImageService.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="testdb")]
	public partial class ImageDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertimage(image instance);
    partial void Updateimage(image instance);
    partial void Deleteimage(image instance);
    #endregion
		
		public ImageDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ImageDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ImageDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ImageDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ImageDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<image> images
		{
			get
			{
				return this.GetTable<image>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.image")]
	public partial class image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _imagesid;
		
		private System.Data.Linq.Binary _imagecontent;
		
		private string _imagename;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnimagesidChanging(int value);
    partial void OnimagesidChanged();
    partial void OnimagecontentChanging(System.Data.Linq.Binary value);
    partial void OnimagecontentChanged();
    partial void OnimagenameChanging(string value);
    partial void OnimagenameChanged();
    #endregion
		
		public image()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagesid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int imagesid
		{
			get
			{
				return this._imagesid;
			}
			set
			{
				if ((this._imagesid != value))
				{
					this.OnimagesidChanging(value);
					this.SendPropertyChanging();
					this._imagesid = value;
					this.SendPropertyChanged("imagesid");
					this.OnimagesidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagecontent", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary imagecontent
		{
			get
			{
				return this._imagecontent;
			}
			set
			{
				if ((this._imagecontent != value))
				{
					this.OnimagecontentChanging(value);
					this.SendPropertyChanging();
					this._imagecontent = value;
					this.SendPropertyChanged("imagecontent");
					this.OnimagecontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagename", DbType="VarChar(50)")]
		public string imagename
		{
			get
			{
				return this._imagename;
			}
			set
			{
				if ((this._imagename != value))
				{
					this.OnimagenameChanging(value);
					this.SendPropertyChanging();
					this._imagename = value;
					this.SendPropertyChanged("imagename");
					this.OnimagenameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
