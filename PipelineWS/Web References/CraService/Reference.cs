//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PipelineWS.CraService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ICRAService", Namespace="http://tempuri.org/")]
    public partial class CRAService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetListDataByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataByIDAndYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataByIDAndYearAltaOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CRAService() {
            this.Url = global::PipelineWS.Properties.Settings.Default.PipelineWS_CraService_CRAService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetListDataByIDCompletedEventHandler GetListDataByIDCompleted;
        
        /// <remarks/>
        public event GetDataByIDCompletedEventHandler GetDataByIDCompleted;
        
        /// <remarks/>
        public event GetDataByIDAndYearCompletedEventHandler GetDataByIDAndYearCompleted;
        
        /// <remarks/>
        public event GetDataByIDAndYearAltaCompletedEventHandler GetDataByIDAndYearAltaCompleted;
        
        /// <remarks/>
        public event HelloCompletedEventHandler HelloCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICRAService/GetListDataByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://stateinstitution.cra.ge/")]
        public PersonInfo[] GetListDataByID([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ID, int user_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool user_idSpecified) {
            object[] results = this.Invoke("GetListDataByID", new object[] {
                        ID,
                        user_id,
                        user_idSpecified});
            return ((PersonInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetListDataByIDAsync(string ID, int user_id, bool user_idSpecified) {
            this.GetListDataByIDAsync(ID, user_id, user_idSpecified, null);
        }
        
        /// <remarks/>
        public void GetListDataByIDAsync(string ID, int user_id, bool user_idSpecified, object userState) {
            if ((this.GetListDataByIDOperationCompleted == null)) {
                this.GetListDataByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListDataByIDOperationCompleted);
            }
            this.InvokeAsync("GetListDataByID", new object[] {
                        ID,
                        user_id,
                        user_idSpecified}, this.GetListDataByIDOperationCompleted, userState);
        }
        
        private void OnGetListDataByIDOperationCompleted(object arg) {
            if ((this.GetListDataByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListDataByIDCompleted(this, new GetListDataByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICRAService/GetDataByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PersonInfo GetDataByID([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ID, int user_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool user_idSpecified) {
            object[] results = this.Invoke("GetDataByID", new object[] {
                        ID,
                        user_id,
                        user_idSpecified});
            return ((PersonInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataByIDAsync(string ID, int user_id, bool user_idSpecified) {
            this.GetDataByIDAsync(ID, user_id, user_idSpecified, null);
        }
        
        /// <remarks/>
        public void GetDataByIDAsync(string ID, int user_id, bool user_idSpecified, object userState) {
            if ((this.GetDataByIDOperationCompleted == null)) {
                this.GetDataByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataByIDOperationCompleted);
            }
            this.InvokeAsync("GetDataByID", new object[] {
                        ID,
                        user_id,
                        user_idSpecified}, this.GetDataByIDOperationCompleted, userState);
        }
        
        private void OnGetDataByIDOperationCompleted(object arg) {
            if ((this.GetDataByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataByIDCompleted(this, new GetDataByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICRAService/GetDataByIDAndYear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PersonInfo GetDataByIDAndYear([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ID, int mYear, [System.Xml.Serialization.XmlIgnoreAttribute()] bool mYearSpecified, int user_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool user_idSpecified) {
            object[] results = this.Invoke("GetDataByIDAndYear", new object[] {
                        ID,
                        mYear,
                        mYearSpecified,
                        user_id,
                        user_idSpecified});
            return ((PersonInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataByIDAndYearAsync(string ID, int mYear, bool mYearSpecified, int user_id, bool user_idSpecified) {
            this.GetDataByIDAndYearAsync(ID, mYear, mYearSpecified, user_id, user_idSpecified, null);
        }
        
        /// <remarks/>
        public void GetDataByIDAndYearAsync(string ID, int mYear, bool mYearSpecified, int user_id, bool user_idSpecified, object userState) {
            if ((this.GetDataByIDAndYearOperationCompleted == null)) {
                this.GetDataByIDAndYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataByIDAndYearOperationCompleted);
            }
            this.InvokeAsync("GetDataByIDAndYear", new object[] {
                        ID,
                        mYear,
                        mYearSpecified,
                        user_id,
                        user_idSpecified}, this.GetDataByIDAndYearOperationCompleted, userState);
        }
        
        private void OnGetDataByIDAndYearOperationCompleted(object arg) {
            if ((this.GetDataByIDAndYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataByIDAndYearCompleted(this, new GetDataByIDAndYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICRAService/GetDataByIDAndYearAlta", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PersonInfo GetDataByIDAndYearAlta([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ID, int mYear, [System.Xml.Serialization.XmlIgnoreAttribute()] bool mYearSpecified, int user_id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool user_idSpecified) {
            object[] results = this.Invoke("GetDataByIDAndYearAlta", new object[] {
                        ID,
                        mYear,
                        mYearSpecified,
                        user_id,
                        user_idSpecified});
            return ((PersonInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataByIDAndYearAltaAsync(string ID, int mYear, bool mYearSpecified, int user_id, bool user_idSpecified) {
            this.GetDataByIDAndYearAltaAsync(ID, mYear, mYearSpecified, user_id, user_idSpecified, null);
        }
        
        /// <remarks/>
        public void GetDataByIDAndYearAltaAsync(string ID, int mYear, bool mYearSpecified, int user_id, bool user_idSpecified, object userState) {
            if ((this.GetDataByIDAndYearAltaOperationCompleted == null)) {
                this.GetDataByIDAndYearAltaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataByIDAndYearAltaOperationCompleted);
            }
            this.InvokeAsync("GetDataByIDAndYearAlta", new object[] {
                        ID,
                        mYear,
                        mYearSpecified,
                        user_id,
                        user_idSpecified}, this.GetDataByIDAndYearAltaOperationCompleted, userState);
        }
        
        private void OnGetDataByIDAndYearAltaOperationCompleted(object arg) {
            if ((this.GetDataByIDAndYearAltaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataByIDAndYearAltaCompleted(this, new GetDataByIDAndYearAltaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICRAService/Hello", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Hello() {
            object[] results = this.Invoke("Hello", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloAsync() {
            this.HelloAsync(null);
        }
        
        /// <remarks/>
        public void HelloAsync(object userState) {
            if ((this.HelloOperationCompleted == null)) {
                this.HelloOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloOperationCompleted);
            }
            this.InvokeAsync("Hello", new object[0], this.HelloOperationCompleted, userState);
        }
        
        private void OnHelloOperationCompleted(object arg) {
            if ((this.HelloCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloCompleted(this, new HelloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stateinstitution.cra.ge/")]
    public partial class PersonInfo {
        
        private ExtensionDataObject extensionDataField;
        
        private System.Nullable<System.DateTime> birthDateField;
        
        private string birthPlaceField;
        
        private string citizenshipField;
        
        private string citizenshipCodeField;
        
        private long documentIDField;
        
        private System.Nullable<DocumentStatus> documentStatusEnumField;
        
        private string documentStatusStrField;
        
        private string doubleCitizenshipField;
        
        private string doubleCitizenshipCodeField;
        
        private string faLivingPlaceField;
        
        private string firstNameField;
        
        private System.Nullable<short> genderField;
        
        private System.Nullable<System.DateTime> idCardIssueDateField;
        
        private string idCardIssuerField;
        
        private string idCardNumberField;
        
        private string idCardSerialField;
        
        private System.Nullable<System.DateTime> idCardValidDateField;
        
        private bool isIdCardField;
        
        private string lastNameField;
        
        private string livingPlaceField;
        
        private System.Nullable<long> livingPlaceIDField;
        
        private System.Nullable<System.DateTime> livingPlaceRegDateField;
        
        private System.Nullable<System.DateTime> livingPlaceRegEndDateField;
        
        private string middleNameField;
        
        private System.Nullable<System.DateTime> paspIssueDateField;
        
        private string paspIssuerField;
        
        private string paspNumberField;
        
        private System.Nullable<System.DateTime> paspValidDateField;
        
        private long personIDField;
        
        private byte[][] photosField;
        
        private string privateNumberField;
        
        private System.Nullable<long> regionIDField;
        
        private string regionStr_Field;
        
        private System.Nullable<System.DateTime> rejectedDateField;
        
        private ResponseStatus responseCodeField;
        
        private string responseIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BirthPlace {
            get {
                return this.birthPlaceField;
            }
            set {
                this.birthPlaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Citizenship {
            get {
                return this.citizenshipField;
            }
            set {
                this.citizenshipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CitizenshipCode {
            get {
                return this.citizenshipCodeField;
            }
            set {
                this.citizenshipCodeField = value;
            }
        }
        
        /// <remarks/>
        public long DocumentID {
            get {
                return this.documentIDField;
            }
            set {
                this.documentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<DocumentStatus> DocumentStatusEnum {
            get {
                return this.documentStatusEnumField;
            }
            set {
                this.documentStatusEnumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DocumentStatusStr {
            get {
                return this.documentStatusStrField;
            }
            set {
                this.documentStatusStrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DoubleCitizenship {
            get {
                return this.doubleCitizenshipField;
            }
            set {
                this.doubleCitizenshipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DoubleCitizenshipCode {
            get {
                return this.doubleCitizenshipCodeField;
            }
            set {
                this.doubleCitizenshipCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FaLivingPlace {
            get {
                return this.faLivingPlaceField;
            }
            set {
                this.faLivingPlaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<short> Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> IdCardIssueDate {
            get {
                return this.idCardIssueDateField;
            }
            set {
                this.idCardIssueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string IdCardIssuer {
            get {
                return this.idCardIssuerField;
            }
            set {
                this.idCardIssuerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string IdCardNumber {
            get {
                return this.idCardNumberField;
            }
            set {
                this.idCardNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string IdCardSerial {
            get {
                return this.idCardSerialField;
            }
            set {
                this.idCardSerialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> IdCardValidDate {
            get {
                return this.idCardValidDateField;
            }
            set {
                this.idCardValidDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsIdCard {
            get {
                return this.isIdCardField;
            }
            set {
                this.isIdCardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LivingPlace {
            get {
                return this.livingPlaceField;
            }
            set {
                this.livingPlaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> LivingPlaceID {
            get {
                return this.livingPlaceIDField;
            }
            set {
                this.livingPlaceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LivingPlaceRegDate {
            get {
                return this.livingPlaceRegDateField;
            }
            set {
                this.livingPlaceRegDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LivingPlaceRegEndDate {
            get {
                return this.livingPlaceRegEndDateField;
            }
            set {
                this.livingPlaceRegEndDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> PaspIssueDate {
            get {
                return this.paspIssueDateField;
            }
            set {
                this.paspIssueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PaspIssuer {
            get {
                return this.paspIssuerField;
            }
            set {
                this.paspIssuerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PaspNumber {
            get {
                return this.paspNumberField;
            }
            set {
                this.paspNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> PaspValidDate {
            get {
                return this.paspValidDateField;
            }
            set {
                this.paspValidDateField = value;
            }
        }
        
        /// <remarks/>
        public long PersonID {
            get {
                return this.personIDField;
            }
            set {
                this.personIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public byte[][] Photos {
            get {
                return this.photosField;
            }
            set {
                this.photosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrivateNumber {
            get {
                return this.privateNumberField;
            }
            set {
                this.privateNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> RegionID {
            get {
                return this.regionIDField;
            }
            set {
                this.regionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RegionStr_ {
            get {
                return this.regionStr_Field;
            }
            set {
                this.regionStr_Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RejectedDate {
            get {
                return this.rejectedDateField;
            }
            set {
                this.rejectedDateField = value;
            }
        }
        
        /// <remarks/>
        public ResponseStatus ResponseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ResponseID {
            get {
                return this.responseIDField;
            }
            set {
                this.responseIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stateinstitution.cra.ge/")]
    public partial class ExtensionDataObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stateinstitution.cra.ge/")]
    public enum DocumentStatus {
        
        /// <remarks/>
        Rejected,
        
        /// <remarks/>
        Active,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stateinstitution.cra.ge/")]
    public enum ResponseStatus {
        
        /// <remarks/>
        UNEXPETC_ERROR,
        
        /// <remarks/>
        ID_CARD_FORMAT_ERROR,
        
        /// <remarks/>
        ID_CARD_PARAMETERS_ERROR,
        
        /// <remarks/>
        PRIVATE_NUMBER_FORMAT_ERROR,
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        PRIVATE_NUMBER_NOT_FOUND,
        
        /// <remarks/>
        ID_CARD_SERIAL_NOT_MATCHED,
        
        /// <remarks/>
        ID_CARD_NUMBER_NOT_MATCHED,
        
        /// <remarks/>
        ID_CARD_NOT_FOUND,
        
        /// <remarks/>
        PERSON_INFO_IS_CLOSED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetListDataByIDCompletedEventHandler(object sender, GetListDataByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListDataByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListDataByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PersonInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PersonInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDataByIDCompletedEventHandler(object sender, GetDataByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PersonInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PersonInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDataByIDAndYearCompletedEventHandler(object sender, GetDataByIDAndYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataByIDAndYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataByIDAndYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PersonInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PersonInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDataByIDAndYearAltaCompletedEventHandler(object sender, GetDataByIDAndYearAltaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataByIDAndYearAltaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataByIDAndYearAltaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PersonInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PersonInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void HelloCompletedEventHandler(object sender, HelloCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591