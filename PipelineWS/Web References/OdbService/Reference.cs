//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PipelineWS.OdbService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UTFODBServiceSoap", Namespace="http://tempuri.org/")]
    public partial class UTFODBService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ClientFacsimilePictureAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientDataUpdateIBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientPhoneUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientRelationAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientSignerAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClientRegInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClientForNaprOperationCompleted;
        
        private System.Threading.SendOrPostCallback VipAnswerOperationCompleted;
        
        private System.Threading.SendOrPostCallback VipDepositAnswerOperationCompleted;
        
        private System.Threading.SendOrPostCallback jur_smsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetErrorDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsWorkDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsWorkTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStampOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestrictedCountryCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSaldoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransaction2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionByForeignIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionByForeignID2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionAdvOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCorrBanksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayedSalaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAmountsForConvertationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAmountForUFCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreasuryCodeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ODBAnswerCodeWrapperOperationCompleted;
        
        private System.Threading.SendOrPostCallback MofCheckClientAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationsByOpCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddConvDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccount_newOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccount_multiOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccountwithProduct_multiOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccountForLoansOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccountForLoans2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccountByCurentAccOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountID2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCorrAccountIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountID_IBANOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountListByIbanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTarifAmount4viewOperationCompleted;
        
        private System.Threading.SendOrPostCallback chk_books_for_accountOperationCompleted;
        
        private System.Threading.SendOrPostCallback chk_book_getOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountForTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountSaldoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountStatementExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountStatementPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountStatementExtendedPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientStatementXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientLastTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountTurnoverOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBalAccTurnoverOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountCreditOpsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountAttributeAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountAttributeDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountSetControlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepositsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepositAccrualGraphOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepositsEfectiveIntrateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepositAccountOvernightAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepositAddAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoanRemaindAmountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientHaveProblemLoanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommisionDebtOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientDebtOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankOpenDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback TreasureInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCrossRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExchangeRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRatesHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCrossRatesKasOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBanksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCodesForRubOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForeignBanksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeptsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientReopenOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddClientMinimalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientAttributeAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientAttributeDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientExtensionsAddMinimalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientInfoEmployerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientInfoByPIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientInfoFatcaByPIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientConsolidatedStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientIncassoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientSequestrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelatedClientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientAccountsD8OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientInternetAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientAccountsAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientAccountsForTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientPassportDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientFacsimileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientFacsimileUpdateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UTFODBService() {
            this.Url = global::PipelineWS.Properties.Settings.Default.PipelineWS_OdbService_UTFODBService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ClientFacsimilePictureAddCompletedEventHandler ClientFacsimilePictureAddCompleted;
        
        /// <remarks/>
        public event ClientDataUpdateIBankCompletedEventHandler ClientDataUpdateIBankCompleted;
        
        /// <remarks/>
        public event ClientPhoneUpdateCompletedEventHandler ClientPhoneUpdateCompleted;
        
        /// <remarks/>
        public event ClientRelationAddCompletedEventHandler ClientRelationAddCompleted;
        
        /// <remarks/>
        public event ClientSignerAddCompletedEventHandler ClientSignerAddCompleted;
        
        /// <remarks/>
        public event UpdateClientRegInfoCompletedEventHandler UpdateClientRegInfoCompleted;
        
        /// <remarks/>
        public event UpdateClientForNaprCompletedEventHandler UpdateClientForNaprCompleted;
        
        /// <remarks/>
        public event VipAnswerCompletedEventHandler VipAnswerCompleted;
        
        /// <remarks/>
        public event VipDepositAnswerCompletedEventHandler VipDepositAnswerCompleted;
        
        /// <remarks/>
        public event jur_smsCompletedEventHandler jur_smsCompleted;
        
        /// <remarks/>
        public event GetErrorDescriptionCompletedEventHandler GetErrorDescriptionCompleted;
        
        /// <remarks/>
        public event IsWorkDayCompletedEventHandler IsWorkDayCompleted;
        
        /// <remarks/>
        public event IsWorkTimeCompletedEventHandler IsWorkTimeCompleted;
        
        /// <remarks/>
        public event GetStampCompletedEventHandler GetStampCompleted;
        
        /// <remarks/>
        public event SendEmailCompletedEventHandler SendEmailCompleted;
        
        /// <remarks/>
        public event RestrictedCountryCheckCompletedEventHandler RestrictedCountryCheckCompleted;
        
        /// <remarks/>
        public event GetSaldoListCompletedEventHandler GetSaldoListCompleted;
        
        /// <remarks/>
        public event GetTransactionCompletedEventHandler GetTransactionCompleted;
        
        /// <remarks/>
        public event GetTransaction2CompletedEventHandler GetTransaction2Completed;
        
        /// <remarks/>
        public event GetTransactionByForeignIDCompletedEventHandler GetTransactionByForeignIDCompleted;
        
        /// <remarks/>
        public event GetTransactionByForeignID2CompletedEventHandler GetTransactionByForeignID2Completed;
        
        /// <remarks/>
        public event GetTransactionAdvCompletedEventHandler GetTransactionAdvCompleted;
        
        /// <remarks/>
        public event CheckTransactionCompletedEventHandler CheckTransactionCompleted;
        
        /// <remarks/>
        public event GetCorrBanksCompletedEventHandler GetCorrBanksCompleted;
        
        /// <remarks/>
        public event GetPayedSalaryCompletedEventHandler GetPayedSalaryCompleted;
        
        /// <remarks/>
        public event GetAmountsForConvertationCompletedEventHandler GetAmountsForConvertationCompleted;
        
        /// <remarks/>
        public event GetAmountForUFCCompletedEventHandler GetAmountForUFCCompleted;
        
        /// <remarks/>
        public event GetTreasuryCodeListCompletedEventHandler GetTreasuryCodeListCompleted;
        
        /// <remarks/>
        public event ODBAnswerCodeWrapperCompletedEventHandler ODBAnswerCodeWrapperCompleted;
        
        /// <remarks/>
        public event MofCheckClientAccountCompletedEventHandler MofCheckClientAccountCompleted;
        
        /// <remarks/>
        public event GetOperationsByOpCodeCompletedEventHandler GetOperationsByOpCodeCompleted;
        
        /// <remarks/>
        public event AddDocCompletedEventHandler AddDocCompleted;
        
        /// <remarks/>
        public event CheckDocCompletedEventHandler CheckDocCompleted;
        
        /// <remarks/>
        public event AddConvDocCompletedEventHandler AddConvDocCompleted;
        
        /// <remarks/>
        public event DeleteDocCompletedEventHandler DeleteDocCompleted;
        
        /// <remarks/>
        public event CreateAccountCompletedEventHandler CreateAccountCompleted;
        
        /// <remarks/>
        public event CreateAccount_newCompletedEventHandler CreateAccount_newCompleted;
        
        /// <remarks/>
        public event CreateAccount_multiCompletedEventHandler CreateAccount_multiCompleted;
        
        /// <remarks/>
        public event CreateAccountwithProduct_multiCompletedEventHandler CreateAccountwithProduct_multiCompleted;
        
        /// <remarks/>
        public event CreateAccountForLoansCompletedEventHandler CreateAccountForLoansCompleted;
        
        /// <remarks/>
        public event CreateAccountForLoans2CompletedEventHandler CreateAccountForLoans2Completed;
        
        /// <remarks/>
        public event CreateAccountByCurentAccCompletedEventHandler CreateAccountByCurentAccCompleted;
        
        /// <remarks/>
        public event GetAccountIDCompletedEventHandler GetAccountIDCompleted;
        
        /// <remarks/>
        public event GetAccountID2CompletedEventHandler GetAccountID2Completed;
        
        /// <remarks/>
        public event GetCorrAccountIDCompletedEventHandler GetCorrAccountIDCompleted;
        
        /// <remarks/>
        public event GetAccountID_IBANCompletedEventHandler GetAccountID_IBANCompleted;
        
        /// <remarks/>
        public event GetAccountListByIbanCompletedEventHandler GetAccountListByIbanCompleted;
        
        /// <remarks/>
        public event GetTarifAmount4viewCompletedEventHandler GetTarifAmount4viewCompleted;
        
        /// <remarks/>
        public event chk_books_for_accountCompletedEventHandler chk_books_for_accountCompleted;
        
        /// <remarks/>
        public event chk_book_getCompletedEventHandler chk_book_getCompleted;
        
        /// <remarks/>
        public event GetAccountCompletedEventHandler GetAccountCompleted;
        
        /// <remarks/>
        public event GetAccountForTransferCompletedEventHandler GetAccountForTransferCompleted;
        
        /// <remarks/>
        public event GetAccountSaldoCompletedEventHandler GetAccountSaldoCompleted;
        
        /// <remarks/>
        public event GetAccountStatementCompletedEventHandler GetAccountStatementCompleted;
        
        /// <remarks/>
        public event GetClientStatementCompletedEventHandler GetClientStatementCompleted;
        
        /// <remarks/>
        public event GetAccountStatementExtendedCompletedEventHandler GetAccountStatementExtendedCompleted;
        
        /// <remarks/>
        public event GetAccountStatementPagedCompletedEventHandler GetAccountStatementPagedCompleted;
        
        /// <remarks/>
        public event GetAccountStatementExtendedPagedCompletedEventHandler GetAccountStatementExtendedPagedCompleted;
        
        /// <remarks/>
        public event GetClientStatementXmlCompletedEventHandler GetClientStatementXmlCompleted;
        
        /// <remarks/>
        public event GetClientLastTransactionsCompletedEventHandler GetClientLastTransactionsCompleted;
        
        /// <remarks/>
        public event GetAccountTurnoverCompletedEventHandler GetAccountTurnoverCompleted;
        
        /// <remarks/>
        public event GetBalAccTurnoverCompletedEventHandler GetBalAccTurnoverCompleted;
        
        /// <remarks/>
        public event GetAccountCreditOpsCompletedEventHandler GetAccountCreditOpsCompleted;
        
        /// <remarks/>
        public event AccountAttributeAddCompletedEventHandler AccountAttributeAddCompleted;
        
        /// <remarks/>
        public event AccountAttributeDeleteCompletedEventHandler AccountAttributeDeleteCompleted;
        
        /// <remarks/>
        public event AccountSetControlCompletedEventHandler AccountSetControlCompleted;
        
        /// <remarks/>
        public event GetDepositsCompletedEventHandler GetDepositsCompleted;
        
        /// <remarks/>
        public event GetDepositCompletedEventHandler GetDepositCompleted;
        
        /// <remarks/>
        public event GetDepositAccrualGraphCompletedEventHandler GetDepositAccrualGraphCompleted;
        
        /// <remarks/>
        public event GetDepositsEfectiveIntrateCompletedEventHandler GetDepositsEfectiveIntrateCompleted;
        
        /// <remarks/>
        public event GetDepositAccountOvernightAmountCompletedEventHandler GetDepositAccountOvernightAmountCompleted;
        
        /// <remarks/>
        public event DepositAddAmountCompletedEventHandler DepositAddAmountCompleted;
        
        /// <remarks/>
        public event GetLoanRemaindAmountsCompletedEventHandler GetLoanRemaindAmountsCompleted;
        
        /// <remarks/>
        public event GetClientHaveProblemLoanCompletedEventHandler GetClientHaveProblemLoanCompleted;
        
        /// <remarks/>
        public event GetCommisionDebtCompletedEventHandler GetCommisionDebtCompleted;
        
        /// <remarks/>
        public event GetClientDebtCompletedEventHandler GetClientDebtCompleted;
        
        /// <remarks/>
        public event BankOpenDateCompletedEventHandler BankOpenDateCompleted;
        
        /// <remarks/>
        public event TreasureInfoCompletedEventHandler TreasureInfoCompleted;
        
        /// <remarks/>
        public event GetRatesCompletedEventHandler GetRatesCompleted;
        
        /// <remarks/>
        public event GetCurrentRatesCompletedEventHandler GetCurrentRatesCompleted;
        
        /// <remarks/>
        public event GetCrossRatesCompletedEventHandler GetCrossRatesCompleted;
        
        /// <remarks/>
        public event GetExchangeRatesCompletedEventHandler GetExchangeRatesCompleted;
        
        /// <remarks/>
        public event GetRatesHistoryCompletedEventHandler GetRatesHistoryCompleted;
        
        /// <remarks/>
        public event GetCrossRatesKasCompletedEventHandler GetCrossRatesKasCompleted;
        
        /// <remarks/>
        public event GetBanksCompletedEventHandler GetBanksCompleted;
        
        /// <remarks/>
        public event GetCodesForRubCompletedEventHandler GetCodesForRubCompleted;
        
        /// <remarks/>
        public event GetBankCompletedEventHandler GetBankCompleted;
        
        /// <remarks/>
        public event GetForeignBanksCompletedEventHandler GetForeignBanksCompleted;
        
        /// <remarks/>
        public event GetCountriesCompletedEventHandler GetCountriesCompleted;
        
        /// <remarks/>
        public event GetDeptsCompletedEventHandler GetDeptsCompleted;
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event ClientReopenCompletedEventHandler ClientReopenCompleted;
        
        /// <remarks/>
        public event AddClientCompletedEventHandler AddClientCompleted;
        
        /// <remarks/>
        public event AddClientMinimalCompletedEventHandler AddClientMinimalCompleted;
        
        /// <remarks/>
        public event ClientAttributeAddCompletedEventHandler ClientAttributeAddCompleted;
        
        /// <remarks/>
        public event ClientAttributeDeleteCompletedEventHandler ClientAttributeDeleteCompleted;
        
        /// <remarks/>
        public event ClientExtensionsAddMinimalCompletedEventHandler ClientExtensionsAddMinimalCompleted;
        
        /// <remarks/>
        public event GetClientInfoCompletedEventHandler GetClientInfoCompleted;
        
        /// <remarks/>
        public event GetClientInfoEmployerCompletedEventHandler GetClientInfoEmployerCompleted;
        
        /// <remarks/>
        public event GetClientInfoByPIDCompletedEventHandler GetClientInfoByPIDCompleted;
        
        /// <remarks/>
        public event GetClientInfoFatcaByPIDCompletedEventHandler GetClientInfoFatcaByPIDCompleted;
        
        /// <remarks/>
        public event GetClientConsolidatedStatementCompletedEventHandler GetClientConsolidatedStatementCompleted;
        
        /// <remarks/>
        public event GetClientIncassoCompletedEventHandler GetClientIncassoCompleted;
        
        /// <remarks/>
        public event GetClientSequestrationCompletedEventHandler GetClientSequestrationCompleted;
        
        /// <remarks/>
        public event GetRelatedClientsCompletedEventHandler GetRelatedClientsCompleted;
        
        /// <remarks/>
        public event GetClientCardsCompletedEventHandler GetClientCardsCompleted;
        
        /// <remarks/>
        public event GetAccountCardsCompletedEventHandler GetAccountCardsCompleted;
        
        /// <remarks/>
        public event GetClientAccountsCompletedEventHandler GetClientAccountsCompleted;
        
        /// <remarks/>
        public event GetClientAccountsD8CompletedEventHandler GetClientAccountsD8Completed;
        
        /// <remarks/>
        public event GetClientInternetAccountCompletedEventHandler GetClientInternetAccountCompleted;
        
        /// <remarks/>
        public event GetClientAccountsAllCompletedEventHandler GetClientAccountsAllCompleted;
        
        /// <remarks/>
        public event GetClientAccountsForTransferCompletedEventHandler GetClientAccountsForTransferCompleted;
        
        /// <remarks/>
        public event GetClientPassportDataCompletedEventHandler GetClientPassportDataCompleted;
        
        /// <remarks/>
        public event GetClientFacsimileCompletedEventHandler GetClientFacsimileCompleted;
        
        /// <remarks/>
        public event ClientFacsimileUpdateCompletedEventHandler ClientFacsimileUpdateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientFacsimilePictureAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer ClientFacsimilePictureAdd(int client_no, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] imageData) {
            object[] results = this.Invoke("ClientFacsimilePictureAdd", new object[] {
                        client_no,
                        imageData});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void ClientFacsimilePictureAddAsync(int client_no, byte[] imageData) {
            this.ClientFacsimilePictureAddAsync(client_no, imageData, null);
        }
        
        /// <remarks/>
        public void ClientFacsimilePictureAddAsync(int client_no, byte[] imageData, object userState) {
            if ((this.ClientFacsimilePictureAddOperationCompleted == null)) {
                this.ClientFacsimilePictureAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientFacsimilePictureAddOperationCompleted);
            }
            this.InvokeAsync("ClientFacsimilePictureAdd", new object[] {
                        client_no,
                        imageData}, this.ClientFacsimilePictureAddOperationCompleted, userState);
        }
        
        private void OnClientFacsimilePictureAddOperationCompleted(object arg) {
            if ((this.ClientFacsimilePictureAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientFacsimilePictureAddCompleted(this, new ClientFacsimilePictureAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientDataUpdateIBank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer ClientDataUpdateIBank(int client_no, string address_fact, string phone_contacts, string phone_mobile, string fax, string email) {
            object[] results = this.Invoke("ClientDataUpdateIBank", new object[] {
                        client_no,
                        address_fact,
                        phone_contacts,
                        phone_mobile,
                        fax,
                        email});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void ClientDataUpdateIBankAsync(int client_no, string address_fact, string phone_contacts, string phone_mobile, string fax, string email) {
            this.ClientDataUpdateIBankAsync(client_no, address_fact, phone_contacts, phone_mobile, fax, email, null);
        }
        
        /// <remarks/>
        public void ClientDataUpdateIBankAsync(int client_no, string address_fact, string phone_contacts, string phone_mobile, string fax, string email, object userState) {
            if ((this.ClientDataUpdateIBankOperationCompleted == null)) {
                this.ClientDataUpdateIBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientDataUpdateIBankOperationCompleted);
            }
            this.InvokeAsync("ClientDataUpdateIBank", new object[] {
                        client_no,
                        address_fact,
                        phone_contacts,
                        phone_mobile,
                        fax,
                        email}, this.ClientDataUpdateIBankOperationCompleted, userState);
        }
        
        private void OnClientDataUpdateIBankOperationCompleted(object arg) {
            if ((this.ClientDataUpdateIBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientDataUpdateIBankCompleted(this, new ClientDataUpdateIBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientPhoneUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer ClientPhoneUpdate(int client_no, string phone_mobile) {
            object[] results = this.Invoke("ClientPhoneUpdate", new object[] {
                        client_no,
                        phone_mobile});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void ClientPhoneUpdateAsync(int client_no, string phone_mobile) {
            this.ClientPhoneUpdateAsync(client_no, phone_mobile, null);
        }
        
        /// <remarks/>
        public void ClientPhoneUpdateAsync(int client_no, string phone_mobile, object userState) {
            if ((this.ClientPhoneUpdateOperationCompleted == null)) {
                this.ClientPhoneUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientPhoneUpdateOperationCompleted);
            }
            this.InvokeAsync("ClientPhoneUpdate", new object[] {
                        client_no,
                        phone_mobile}, this.ClientPhoneUpdateOperationCompleted, userState);
        }
        
        private void OnClientPhoneUpdateOperationCompleted(object arg) {
            if ((this.ClientPhoneUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientPhoneUpdateCompleted(this, new ClientPhoneUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientRelationAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer ClientRelationAdd(long clientNo, long rel_client_no, int client_relation_type_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> int_value, string str_value, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> money_value, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> is_active, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> is_authorized, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> start_date, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> end_date) {
            object[] results = this.Invoke("ClientRelationAdd", new object[] {
                        clientNo,
                        rel_client_no,
                        client_relation_type_id,
                        int_value,
                        str_value,
                        money_value,
                        is_active,
                        is_authorized,
                        start_date,
                        end_date});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void ClientRelationAddAsync(long clientNo, long rel_client_no, int client_relation_type_id, System.Nullable<int> int_value, string str_value, System.Nullable<decimal> money_value, System.Nullable<bool> is_active, System.Nullable<bool> is_authorized, System.Nullable<System.DateTime> start_date, System.Nullable<System.DateTime> end_date) {
            this.ClientRelationAddAsync(clientNo, rel_client_no, client_relation_type_id, int_value, str_value, money_value, is_active, is_authorized, start_date, end_date, null);
        }
        
        /// <remarks/>
        public void ClientRelationAddAsync(long clientNo, long rel_client_no, int client_relation_type_id, System.Nullable<int> int_value, string str_value, System.Nullable<decimal> money_value, System.Nullable<bool> is_active, System.Nullable<bool> is_authorized, System.Nullable<System.DateTime> start_date, System.Nullable<System.DateTime> end_date, object userState) {
            if ((this.ClientRelationAddOperationCompleted == null)) {
                this.ClientRelationAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientRelationAddOperationCompleted);
            }
            this.InvokeAsync("ClientRelationAdd", new object[] {
                        clientNo,
                        rel_client_no,
                        client_relation_type_id,
                        int_value,
                        str_value,
                        money_value,
                        is_active,
                        is_authorized,
                        start_date,
                        end_date}, this.ClientRelationAddOperationCompleted, userState);
        }
        
        private void OnClientRelationAddOperationCompleted(object arg) {
            if ((this.ClientRelationAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientRelationAddCompleted(this, new ClientRelationAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientSignerAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer ClientSignerAdd(long clientNo, int signer_type, string position, string first_name, string last_name, string personal_id, string executive_nationality) {
            object[] results = this.Invoke("ClientSignerAdd", new object[] {
                        clientNo,
                        signer_type,
                        position,
                        first_name,
                        last_name,
                        personal_id,
                        executive_nationality});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void ClientSignerAddAsync(long clientNo, int signer_type, string position, string first_name, string last_name, string personal_id, string executive_nationality) {
            this.ClientSignerAddAsync(clientNo, signer_type, position, first_name, last_name, personal_id, executive_nationality, null);
        }
        
        /// <remarks/>
        public void ClientSignerAddAsync(long clientNo, int signer_type, string position, string first_name, string last_name, string personal_id, string executive_nationality, object userState) {
            if ((this.ClientSignerAddOperationCompleted == null)) {
                this.ClientSignerAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientSignerAddOperationCompleted);
            }
            this.InvokeAsync("ClientSignerAdd", new object[] {
                        clientNo,
                        signer_type,
                        position,
                        first_name,
                        last_name,
                        personal_id,
                        executive_nationality}, this.ClientSignerAddOperationCompleted, userState);
        }
        
        private void OnClientSignerAddOperationCompleted(object arg) {
            if ((this.ClientSignerAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientSignerAddCompleted(this, new ClientSignerAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateClientRegInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer UpdateClientRegInfo(int client_no, int user_id, int client_subtype, string tax_insp_code, string reg_num, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> reg_date, string reg_organ) {
            object[] results = this.Invoke("UpdateClientRegInfo", new object[] {
                        client_no,
                        user_id,
                        client_subtype,
                        tax_insp_code,
                        reg_num,
                        reg_date,
                        reg_organ});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClientRegInfoAsync(int client_no, int user_id, int client_subtype, string tax_insp_code, string reg_num, System.Nullable<System.DateTime> reg_date, string reg_organ) {
            this.UpdateClientRegInfoAsync(client_no, user_id, client_subtype, tax_insp_code, reg_num, reg_date, reg_organ, null);
        }
        
        /// <remarks/>
        public void UpdateClientRegInfoAsync(int client_no, int user_id, int client_subtype, string tax_insp_code, string reg_num, System.Nullable<System.DateTime> reg_date, string reg_organ, object userState) {
            if ((this.UpdateClientRegInfoOperationCompleted == null)) {
                this.UpdateClientRegInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClientRegInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateClientRegInfo", new object[] {
                        client_no,
                        user_id,
                        client_subtype,
                        tax_insp_code,
                        reg_num,
                        reg_date,
                        reg_organ}, this.UpdateClientRegInfoOperationCompleted, userState);
        }
        
        private void OnUpdateClientRegInfoOperationCompleted(object arg) {
            if ((this.UpdateClientRegInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClientRegInfoCompleted(this, new UpdateClientRegInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateClientForNapr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer UpdateClientForNapr(
                    int client_no, 
                    int user_id, 
                    string phones_contact, 
                    string phone_mob, 
                    string fax, 
                    string email, 
                    string address_fact, 
                    string address_legal, 
                    string first_name, 
                    string last_name, 
                    string fathers_name, 
                    string citizenship, 
                    string double_citizenship, 
                    string passport, 
                    string passport_reg_organ, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> birht_date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> passport_issue_dt, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> passport_end_date, 
                    string passport_country, 
                    string resident_country, 
                    string city, 
                    string fact_country, 
                    string fact_city, 
                    string country_of_birth, 
                    string birth_place, 
                    string client_job_place, 
                    string client_job_title, 
                    string monthly_income, 
                    int client_subtype, 
                    string tax_insp_code, 
                    string reg_num, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> reg_date, 
                    string reg_organ) {
            object[] results = this.Invoke("UpdateClientForNapr", new object[] {
                        client_no,
                        user_id,
                        phones_contact,
                        phone_mob,
                        fax,
                        email,
                        address_fact,
                        address_legal,
                        first_name,
                        last_name,
                        fathers_name,
                        citizenship,
                        double_citizenship,
                        passport,
                        passport_reg_organ,
                        birht_date,
                        passport_issue_dt,
                        passport_end_date,
                        passport_country,
                        resident_country,
                        city,
                        fact_country,
                        fact_city,
                        country_of_birth,
                        birth_place,
                        client_job_place,
                        client_job_title,
                        monthly_income,
                        client_subtype,
                        tax_insp_code,
                        reg_num,
                        reg_date,
                        reg_organ});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClientForNaprAsync(
                    int client_no, 
                    int user_id, 
                    string phones_contact, 
                    string phone_mob, 
                    string fax, 
                    string email, 
                    string address_fact, 
                    string address_legal, 
                    string first_name, 
                    string last_name, 
                    string fathers_name, 
                    string citizenship, 
                    string double_citizenship, 
                    string passport, 
                    string passport_reg_organ, 
                    System.Nullable<System.DateTime> birht_date, 
                    System.Nullable<System.DateTime> passport_issue_dt, 
                    System.Nullable<System.DateTime> passport_end_date, 
                    string passport_country, 
                    string resident_country, 
                    string city, 
                    string fact_country, 
                    string fact_city, 
                    string country_of_birth, 
                    string birth_place, 
                    string client_job_place, 
                    string client_job_title, 
                    string monthly_income, 
                    int client_subtype, 
                    string tax_insp_code, 
                    string reg_num, 
                    System.Nullable<System.DateTime> reg_date, 
                    string reg_organ) {
            this.UpdateClientForNaprAsync(client_no, user_id, phones_contact, phone_mob, fax, email, address_fact, address_legal, first_name, last_name, fathers_name, citizenship, double_citizenship, passport, passport_reg_organ, birht_date, passport_issue_dt, passport_end_date, passport_country, resident_country, city, fact_country, fact_city, country_of_birth, birth_place, client_job_place, client_job_title, monthly_income, client_subtype, tax_insp_code, reg_num, reg_date, reg_organ, null);
        }
        
        /// <remarks/>
        public void UpdateClientForNaprAsync(
                    int client_no, 
                    int user_id, 
                    string phones_contact, 
                    string phone_mob, 
                    string fax, 
                    string email, 
                    string address_fact, 
                    string address_legal, 
                    string first_name, 
                    string last_name, 
                    string fathers_name, 
                    string citizenship, 
                    string double_citizenship, 
                    string passport, 
                    string passport_reg_organ, 
                    System.Nullable<System.DateTime> birht_date, 
                    System.Nullable<System.DateTime> passport_issue_dt, 
                    System.Nullable<System.DateTime> passport_end_date, 
                    string passport_country, 
                    string resident_country, 
                    string city, 
                    string fact_country, 
                    string fact_city, 
                    string country_of_birth, 
                    string birth_place, 
                    string client_job_place, 
                    string client_job_title, 
                    string monthly_income, 
                    int client_subtype, 
                    string tax_insp_code, 
                    string reg_num, 
                    System.Nullable<System.DateTime> reg_date, 
                    string reg_organ, 
                    object userState) {
            if ((this.UpdateClientForNaprOperationCompleted == null)) {
                this.UpdateClientForNaprOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClientForNaprOperationCompleted);
            }
            this.InvokeAsync("UpdateClientForNapr", new object[] {
                        client_no,
                        user_id,
                        phones_contact,
                        phone_mob,
                        fax,
                        email,
                        address_fact,
                        address_legal,
                        first_name,
                        last_name,
                        fathers_name,
                        citizenship,
                        double_citizenship,
                        passport,
                        passport_reg_organ,
                        birht_date,
                        passport_issue_dt,
                        passport_end_date,
                        passport_country,
                        resident_country,
                        city,
                        fact_country,
                        fact_city,
                        country_of_birth,
                        birth_place,
                        client_job_place,
                        client_job_title,
                        monthly_income,
                        client_subtype,
                        tax_insp_code,
                        reg_num,
                        reg_date,
                        reg_organ}, this.UpdateClientForNaprOperationCompleted, userState);
        }
        
        private void OnUpdateClientForNaprOperationCompleted(object arg) {
            if ((this.UpdateClientForNaprCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClientForNaprCompleted(this, new UpdateClientForNaprCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VipAnswer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer VipAnswer(string body, string phone) {
            object[] results = this.Invoke("VipAnswer", new object[] {
                        body,
                        phone});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void VipAnswerAsync(string body, string phone) {
            this.VipAnswerAsync(body, phone, null);
        }
        
        /// <remarks/>
        public void VipAnswerAsync(string body, string phone, object userState) {
            if ((this.VipAnswerOperationCompleted == null)) {
                this.VipAnswerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVipAnswerOperationCompleted);
            }
            this.InvokeAsync("VipAnswer", new object[] {
                        body,
                        phone}, this.VipAnswerOperationCompleted, userState);
        }
        
        private void OnVipAnswerOperationCompleted(object arg) {
            if ((this.VipAnswerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VipAnswerCompleted(this, new VipAnswerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VipDepositAnswer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer VipDepositAnswer(string body, string phone) {
            object[] results = this.Invoke("VipDepositAnswer", new object[] {
                        body,
                        phone});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void VipDepositAnswerAsync(string body, string phone) {
            this.VipDepositAnswerAsync(body, phone, null);
        }
        
        /// <remarks/>
        public void VipDepositAnswerAsync(string body, string phone, object userState) {
            if ((this.VipDepositAnswerOperationCompleted == null)) {
                this.VipDepositAnswerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVipDepositAnswerOperationCompleted);
            }
            this.InvokeAsync("VipDepositAnswer", new object[] {
                        body,
                        phone}, this.VipDepositAnswerOperationCompleted, userState);
        }
        
        private void OnVipDepositAnswerOperationCompleted(object arg) {
            if ((this.VipDepositAnswerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VipDepositAnswerCompleted(this, new VipDepositAnswerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/jur_sms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer jur_sms(string id, string phone) {
            object[] results = this.Invoke("jur_sms", new object[] {
                        id,
                        phone});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void jur_smsAsync(string id, string phone) {
            this.jur_smsAsync(id, phone, null);
        }
        
        /// <remarks/>
        public void jur_smsAsync(string id, string phone, object userState) {
            if ((this.jur_smsOperationCompleted == null)) {
                this.jur_smsOperationCompleted = new System.Threading.SendOrPostCallback(this.Onjur_smsOperationCompleted);
            }
            this.InvokeAsync("jur_sms", new object[] {
                        id,
                        phone}, this.jur_smsOperationCompleted, userState);
        }
        
        private void Onjur_smsOperationCompleted(object arg) {
            if ((this.jur_smsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.jur_smsCompleted(this, new jur_smsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetErrorDescription", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetErrorDescription([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> errorCode, string languageSysCode) {
            object[] results = this.Invoke("GetErrorDescription", new object[] {
                        errorCode,
                        languageSysCode});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetErrorDescriptionAsync(System.Nullable<int> errorCode, string languageSysCode) {
            this.GetErrorDescriptionAsync(errorCode, languageSysCode, null);
        }
        
        /// <remarks/>
        public void GetErrorDescriptionAsync(System.Nullable<int> errorCode, string languageSysCode, object userState) {
            if ((this.GetErrorDescriptionOperationCompleted == null)) {
                this.GetErrorDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetErrorDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetErrorDescription", new object[] {
                        errorCode,
                        languageSysCode}, this.GetErrorDescriptionOperationCompleted, userState);
        }
        
        private void OnGetErrorDescriptionOperationCompleted(object arg) {
            if ((this.GetErrorDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetErrorDescriptionCompleted(this, new GetErrorDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsWorkDay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer IsWorkDay(System.DateTime date) {
            object[] results = this.Invoke("IsWorkDay", new object[] {
                        date});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void IsWorkDayAsync(System.DateTime date) {
            this.IsWorkDayAsync(date, null);
        }
        
        /// <remarks/>
        public void IsWorkDayAsync(System.DateTime date, object userState) {
            if ((this.IsWorkDayOperationCompleted == null)) {
                this.IsWorkDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsWorkDayOperationCompleted);
            }
            this.InvokeAsync("IsWorkDay", new object[] {
                        date}, this.IsWorkDayOperationCompleted, userState);
        }
        
        private void OnIsWorkDayOperationCompleted(object arg) {
            if ((this.IsWorkDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsWorkDayCompleted(this, new IsWorkDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsWorkTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer IsWorkTime(string appSysCode) {
            object[] results = this.Invoke("IsWorkTime", new object[] {
                        appSysCode});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void IsWorkTimeAsync(string appSysCode) {
            this.IsWorkTimeAsync(appSysCode, null);
        }
        
        /// <remarks/>
        public void IsWorkTimeAsync(string appSysCode, object userState) {
            if ((this.IsWorkTimeOperationCompleted == null)) {
                this.IsWorkTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsWorkTimeOperationCompleted);
            }
            this.InvokeAsync("IsWorkTime", new object[] {
                        appSysCode}, this.IsWorkTimeOperationCompleted, userState);
        }
        
        private void OnIsWorkTimeOperationCompleted(object arg) {
            if ((this.IsWorkTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsWorkTimeCompleted(this, new IsWorkTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStamp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetStamp(string appSysCode) {
            object[] results = this.Invoke("GetStamp", new object[] {
                        appSysCode});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetStampAsync(string appSysCode) {
            this.GetStampAsync(appSysCode, null);
        }
        
        /// <remarks/>
        public void GetStampAsync(string appSysCode, object userState) {
            if ((this.GetStampOperationCompleted == null)) {
                this.GetStampOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStampOperationCompleted);
            }
            this.InvokeAsync("GetStamp", new object[] {
                        appSysCode}, this.GetStampOperationCompleted, userState);
        }
        
        private void OnGetStampOperationCompleted(object arg) {
            if ((this.GetStampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStampCompleted(this, new GetStampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendEmail(string body, string subject, string recipients) {
            object[] results = this.Invoke("SendEmail", new object[] {
                        body,
                        subject,
                        recipients});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailAsync(string body, string subject, string recipients) {
            this.SendEmailAsync(body, subject, recipients, null);
        }
        
        /// <remarks/>
        public void SendEmailAsync(string body, string subject, string recipients, object userState) {
            if ((this.SendEmailOperationCompleted == null)) {
                this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
            }
            this.InvokeAsync("SendEmail", new object[] {
                        body,
                        subject,
                        recipients}, this.SendEmailOperationCompleted, userState);
        }
        
        private void OnSendEmailOperationCompleted(object arg) {
            if ((this.SendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailCompleted(this, new SendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RestrictedCountryCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RestrictedCountryCheck(string country) {
            object[] results = this.Invoke("RestrictedCountryCheck", new object[] {
                        country});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RestrictedCountryCheckAsync(string country) {
            this.RestrictedCountryCheckAsync(country, null);
        }
        
        /// <remarks/>
        public void RestrictedCountryCheckAsync(string country, object userState) {
            if ((this.RestrictedCountryCheckOperationCompleted == null)) {
                this.RestrictedCountryCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestrictedCountryCheckOperationCompleted);
            }
            this.InvokeAsync("RestrictedCountryCheck", new object[] {
                        country}, this.RestrictedCountryCheckOperationCompleted, userState);
        }
        
        private void OnRestrictedCountryCheckOperationCompleted(object arg) {
            if ((this.RestrictedCountryCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestrictedCountryCheckCompleted(this, new RestrictedCountryCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSaldoList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetSaldoList(int branchID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> deptNo, System.DateTime date, string ballAccList, string classList, string groupList, string parametersList, int shadowLevel) {
            object[] results = this.Invoke("GetSaldoList", new object[] {
                        branchID,
                        deptNo,
                        date,
                        ballAccList,
                        classList,
                        groupList,
                        parametersList,
                        shadowLevel});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetSaldoListAsync(int branchID, System.Nullable<int> deptNo, System.DateTime date, string ballAccList, string classList, string groupList, string parametersList, int shadowLevel) {
            this.GetSaldoListAsync(branchID, deptNo, date, ballAccList, classList, groupList, parametersList, shadowLevel, null);
        }
        
        /// <remarks/>
        public void GetSaldoListAsync(int branchID, System.Nullable<int> deptNo, System.DateTime date, string ballAccList, string classList, string groupList, string parametersList, int shadowLevel, object userState) {
            if ((this.GetSaldoListOperationCompleted == null)) {
                this.GetSaldoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSaldoListOperationCompleted);
            }
            this.InvokeAsync("GetSaldoList", new object[] {
                        branchID,
                        deptNo,
                        date,
                        ballAccList,
                        classList,
                        groupList,
                        parametersList,
                        shadowLevel}, this.GetSaldoListOperationCompleted, userState);
        }
        
        private void OnGetSaldoListOperationCompleted(object arg) {
            if ((this.GetSaldoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSaldoListCompleted(this, new GetSaldoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetTransaction(int recID) {
            object[] results = this.Invoke("GetTransaction", new object[] {
                        recID});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionAsync(int recID) {
            this.GetTransactionAsync(recID, null);
        }
        
        /// <remarks/>
        public void GetTransactionAsync(int recID, object userState) {
            if ((this.GetTransactionOperationCompleted == null)) {
                this.GetTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionOperationCompleted);
            }
            this.InvokeAsync("GetTransaction", new object[] {
                        recID}, this.GetTransactionOperationCompleted, userState);
        }
        
        private void OnGetTransactionOperationCompleted(object arg) {
            if ((this.GetTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionCompleted(this, new GetTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransaction2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetTransaction2(int recID, int accID) {
            object[] results = this.Invoke("GetTransaction2", new object[] {
                        recID,
                        accID});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransaction2Async(int recID, int accID) {
            this.GetTransaction2Async(recID, accID, null);
        }
        
        /// <remarks/>
        public void GetTransaction2Async(int recID, int accID, object userState) {
            if ((this.GetTransaction2OperationCompleted == null)) {
                this.GetTransaction2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransaction2OperationCompleted);
            }
            this.InvokeAsync("GetTransaction2", new object[] {
                        recID,
                        accID}, this.GetTransaction2OperationCompleted, userState);
        }
        
        private void OnGetTransaction2OperationCompleted(object arg) {
            if ((this.GetTransaction2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransaction2Completed(this, new GetTransaction2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionByForeignID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetTransactionByForeignID(int foreignID, string opCode) {
            object[] results = this.Invoke("GetTransactionByForeignID", new object[] {
                        foreignID,
                        opCode});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionByForeignIDAsync(int foreignID, string opCode) {
            this.GetTransactionByForeignIDAsync(foreignID, opCode, null);
        }
        
        /// <remarks/>
        public void GetTransactionByForeignIDAsync(int foreignID, string opCode, object userState) {
            if ((this.GetTransactionByForeignIDOperationCompleted == null)) {
                this.GetTransactionByForeignIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionByForeignIDOperationCompleted);
            }
            this.InvokeAsync("GetTransactionByForeignID", new object[] {
                        foreignID,
                        opCode}, this.GetTransactionByForeignIDOperationCompleted, userState);
        }
        
        private void OnGetTransactionByForeignIDOperationCompleted(object arg) {
            if ((this.GetTransactionByForeignIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionByForeignIDCompleted(this, new GetTransactionByForeignIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionByForeignID2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetTransactionByForeignID2(int accID, int foreignID, string opCode) {
            object[] results = this.Invoke("GetTransactionByForeignID2", new object[] {
                        accID,
                        foreignID,
                        opCode});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionByForeignID2Async(int accID, int foreignID, string opCode) {
            this.GetTransactionByForeignID2Async(accID, foreignID, opCode, null);
        }
        
        /// <remarks/>
        public void GetTransactionByForeignID2Async(int accID, int foreignID, string opCode, object userState) {
            if ((this.GetTransactionByForeignID2OperationCompleted == null)) {
                this.GetTransactionByForeignID2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionByForeignID2OperationCompleted);
            }
            this.InvokeAsync("GetTransactionByForeignID2", new object[] {
                        accID,
                        foreignID,
                        opCode}, this.GetTransactionByForeignID2OperationCompleted, userState);
        }
        
        private void OnGetTransactionByForeignID2OperationCompleted(object arg) {
            if ((this.GetTransactionByForeignID2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionByForeignID2Completed(this, new GetTransactionByForeignID2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionAdv", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetTransactionAdv(int recID, int accID, int foreignID, string opCode) {
            object[] results = this.Invoke("GetTransactionAdv", new object[] {
                        recID,
                        accID,
                        foreignID,
                        opCode});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionAdvAsync(int recID, int accID, int foreignID, string opCode) {
            this.GetTransactionAdvAsync(recID, accID, foreignID, opCode, null);
        }
        
        /// <remarks/>
        public void GetTransactionAdvAsync(int recID, int accID, int foreignID, string opCode, object userState) {
            if ((this.GetTransactionAdvOperationCompleted == null)) {
                this.GetTransactionAdvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionAdvOperationCompleted);
            }
            this.InvokeAsync("GetTransactionAdv", new object[] {
                        recID,
                        accID,
                        foreignID,
                        opCode}, this.GetTransactionAdvOperationCompleted, userState);
        }
        
        private void OnGetTransactionAdvOperationCompleted(object arg) {
            if ((this.GetTransactionAdvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionAdvCompleted(this, new GetTransactionAdvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer CheckTransaction(int foreignId, int chanelId, string opCode, long debitId, long creditId, decimal amount) {
            object[] results = this.Invoke("CheckTransaction", new object[] {
                        foreignId,
                        chanelId,
                        opCode,
                        debitId,
                        creditId,
                        amount});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTransactionAsync(int foreignId, int chanelId, string opCode, long debitId, long creditId, decimal amount) {
            this.CheckTransactionAsync(foreignId, chanelId, opCode, debitId, creditId, amount, null);
        }
        
        /// <remarks/>
        public void CheckTransactionAsync(int foreignId, int chanelId, string opCode, long debitId, long creditId, decimal amount, object userState) {
            if ((this.CheckTransactionOperationCompleted == null)) {
                this.CheckTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTransactionOperationCompleted);
            }
            this.InvokeAsync("CheckTransaction", new object[] {
                        foreignId,
                        chanelId,
                        opCode,
                        debitId,
                        creditId,
                        amount}, this.CheckTransactionOperationCompleted, userState);
        }
        
        private void OnCheckTransactionOperationCompleted(object arg) {
            if ((this.CheckTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTransactionCompleted(this, new CheckTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCorrBanks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetCorrBanks(string ISO) {
            object[] results = this.Invoke("GetCorrBanks", new object[] {
                        ISO});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCorrBanksAsync(string ISO) {
            this.GetCorrBanksAsync(ISO, null);
        }
        
        /// <remarks/>
        public void GetCorrBanksAsync(string ISO, object userState) {
            if ((this.GetCorrBanksOperationCompleted == null)) {
                this.GetCorrBanksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCorrBanksOperationCompleted);
            }
            this.InvokeAsync("GetCorrBanks", new object[] {
                        ISO}, this.GetCorrBanksOperationCompleted, userState);
        }
        
        private void OnGetCorrBanksOperationCompleted(object arg) {
            if ((this.GetCorrBanksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCorrBanksCompleted(this, new GetCorrBanksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPayedSalary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetPayedSalary(long accID) {
            object[] results = this.Invoke("GetPayedSalary", new object[] {
                        accID});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayedSalaryAsync(long accID) {
            this.GetPayedSalaryAsync(accID, null);
        }
        
        /// <remarks/>
        public void GetPayedSalaryAsync(long accID, object userState) {
            if ((this.GetPayedSalaryOperationCompleted == null)) {
                this.GetPayedSalaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayedSalaryOperationCompleted);
            }
            this.InvokeAsync("GetPayedSalary", new object[] {
                        accID}, this.GetPayedSalaryOperationCompleted, userState);
        }
        
        private void OnGetPayedSalaryOperationCompleted(object arg) {
            if ((this.GetPayedSalaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayedSalaryCompleted(this, new GetPayedSalaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAmountsForConvertation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAmountsForConvertation(string iso1, string iso2, decimal amount1, decimal amount2) {
            object[] results = this.Invoke("GetAmountsForConvertation", new object[] {
                        iso1,
                        iso2,
                        amount1,
                        amount2});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAmountsForConvertationAsync(string iso1, string iso2, decimal amount1, decimal amount2) {
            this.GetAmountsForConvertationAsync(iso1, iso2, amount1, amount2, null);
        }
        
        /// <remarks/>
        public void GetAmountsForConvertationAsync(string iso1, string iso2, decimal amount1, decimal amount2, object userState) {
            if ((this.GetAmountsForConvertationOperationCompleted == null)) {
                this.GetAmountsForConvertationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAmountsForConvertationOperationCompleted);
            }
            this.InvokeAsync("GetAmountsForConvertation", new object[] {
                        iso1,
                        iso2,
                        amount1,
                        amount2}, this.GetAmountsForConvertationOperationCompleted, userState);
        }
        
        private void OnGetAmountsForConvertationOperationCompleted(object arg) {
            if ((this.GetAmountsForConvertationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAmountsForConvertationCompleted(this, new GetAmountsForConvertationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAmountForUFC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAmountForUFC(string payISO, string limitsISO, decimal payAmount, decimal limitsAmount) {
            object[] results = this.Invoke("GetAmountForUFC", new object[] {
                        payISO,
                        limitsISO,
                        payAmount,
                        limitsAmount});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAmountForUFCAsync(string payISO, string limitsISO, decimal payAmount, decimal limitsAmount) {
            this.GetAmountForUFCAsync(payISO, limitsISO, payAmount, limitsAmount, null);
        }
        
        /// <remarks/>
        public void GetAmountForUFCAsync(string payISO, string limitsISO, decimal payAmount, decimal limitsAmount, object userState) {
            if ((this.GetAmountForUFCOperationCompleted == null)) {
                this.GetAmountForUFCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAmountForUFCOperationCompleted);
            }
            this.InvokeAsync("GetAmountForUFC", new object[] {
                        payISO,
                        limitsISO,
                        payAmount,
                        limitsAmount}, this.GetAmountForUFCOperationCompleted, userState);
        }
        
        private void OnGetAmountForUFCOperationCompleted(object arg) {
            if ((this.GetAmountForUFCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAmountForUFCCompleted(this, new GetAmountForUFCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTreasuryCodeList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetTreasuryCodeList() {
            object[] results = this.Invoke("GetTreasuryCodeList", new object[0]);
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreasuryCodeListAsync() {
            this.GetTreasuryCodeListAsync(null);
        }
        
        /// <remarks/>
        public void GetTreasuryCodeListAsync(object userState) {
            if ((this.GetTreasuryCodeListOperationCompleted == null)) {
                this.GetTreasuryCodeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreasuryCodeListOperationCompleted);
            }
            this.InvokeAsync("GetTreasuryCodeList", new object[0], this.GetTreasuryCodeListOperationCompleted, userState);
        }
        
        private void OnGetTreasuryCodeListOperationCompleted(object arg) {
            if ((this.GetTreasuryCodeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreasuryCodeListCompleted(this, new GetTreasuryCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ODBAnswerCodeWrapper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswerCode ODBAnswerCodeWrapper() {
            object[] results = this.Invoke("ODBAnswerCodeWrapper", new object[0]);
            return ((ODBAnswerCode)(results[0]));
        }
        
        /// <remarks/>
        public void ODBAnswerCodeWrapperAsync() {
            this.ODBAnswerCodeWrapperAsync(null);
        }
        
        /// <remarks/>
        public void ODBAnswerCodeWrapperAsync(object userState) {
            if ((this.ODBAnswerCodeWrapperOperationCompleted == null)) {
                this.ODBAnswerCodeWrapperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnODBAnswerCodeWrapperOperationCompleted);
            }
            this.InvokeAsync("ODBAnswerCodeWrapper", new object[0], this.ODBAnswerCodeWrapperOperationCompleted, userState);
        }
        
        private void OnODBAnswerCodeWrapperOperationCompleted(object arg) {
            if ((this.ODBAnswerCodeWrapperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ODBAnswerCodeWrapperCompleted(this, new ODBAnswerCodeWrapperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MofCheckClientAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MofCheckClientAccount[] MofCheckClientAccount(string personal_id, string account_iban) {
            object[] results = this.Invoke("MofCheckClientAccount", new object[] {
                        personal_id,
                        account_iban});
            return ((MofCheckClientAccount[])(results[0]));
        }
        
        /// <remarks/>
        public void MofCheckClientAccountAsync(string personal_id, string account_iban) {
            this.MofCheckClientAccountAsync(personal_id, account_iban, null);
        }
        
        /// <remarks/>
        public void MofCheckClientAccountAsync(string personal_id, string account_iban, object userState) {
            if ((this.MofCheckClientAccountOperationCompleted == null)) {
                this.MofCheckClientAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMofCheckClientAccountOperationCompleted);
            }
            this.InvokeAsync("MofCheckClientAccount", new object[] {
                        personal_id,
                        account_iban}, this.MofCheckClientAccountOperationCompleted, userState);
        }
        
        private void OnMofCheckClientAccountOperationCompleted(object arg) {
            if ((this.MofCheckClientAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MofCheckClientAccountCompleted(this, new MofCheckClientAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperationsByOpCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetOperationsByOpCode(string opCode) {
            object[] results = this.Invoke("GetOperationsByOpCode", new object[] {
                        opCode});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperationsByOpCodeAsync(string opCode) {
            this.GetOperationsByOpCodeAsync(opCode, null);
        }
        
        /// <remarks/>
        public void GetOperationsByOpCodeAsync(string opCode, object userState) {
            if ((this.GetOperationsByOpCodeOperationCompleted == null)) {
                this.GetOperationsByOpCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationsByOpCodeOperationCompleted);
            }
            this.InvokeAsync("GetOperationsByOpCode", new object[] {
                        opCode}, this.GetOperationsByOpCodeOperationCompleted, userState);
        }
        
        private void OnGetOperationsByOpCodeOperationCompleted(object arg) {
            if ((this.GetOperationsByOpCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationsByOpCodeCompleted(this, new GetOperationsByOpCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer AddDoc(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> user_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> owner, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> doc_type, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> doc_date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> doc_date_in_doc, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> debit_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> credit_id, 
                    string iso, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> amount, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> rec_state, 
                    string descrip, 
                    string op_code, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> parent_rec_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> doc_num, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> bnk_cli_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> account_extra, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> dept_no, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> prod_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> foreign_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> channel_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> is_suspicious, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> relation_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> flags, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> cashier, 
                    string chk_serie, 
                    string treasury_code, 
                    string tax_code_or_pid, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> por, 
                    string sender_bank_code, 
                    string sender_bank_name, 
                    string sender_acc, 
                    string sender_acc_name, 
                    string sender_tax_code, 
                    string receiver_bank_code, 
                    string receiver_bank_name, 
                    string receiver_acc, 
                    string receiver_acc_name, 
                    string receiver_tax_code, 
                    string extra_info, 
                    string ref_num, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> rec_date, 
                    string saxazkod, 
                    string intermed_bank_code, 
                    string intermed_bank_name, 
                    string swift_text, 
                    string cor_bank_code, 
                    string cor_bank_name, 
                    string det_of_charg, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> extra_info_descrip, 
                    string first_name, 
                    string last_name, 
                    string fathers_name, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> birth_date, 
                    string birth_place, 
                    string address_jur, 
                    string address_lat, 
                    string country, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> passport_type_id, 
                    string passport, 
                    string personal_id, 
                    string reg_organ, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> passport_issue_dt, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> passport_end_date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> check_saldo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> add_tariff, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> info, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> lat, 
                    string pid, 
                    string tax_payer_tax_code, 
                    string tax_payer_name, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> fast_payment, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> is_b2b, 
                    string ttc_code, 
                    string sender_address_lat, 
                    string receiver_address_lat, 
                    string sender_f50_option, 
                    string phone, 
                    string extra_descrip) {
            object[] results = this.Invoke("AddDoc", new object[] {
                        user_id,
                        owner,
                        doc_type,
                        doc_date,
                        doc_date_in_doc,
                        debit_id,
                        credit_id,
                        iso,
                        amount,
                        rec_state,
                        descrip,
                        op_code,
                        parent_rec_id,
                        doc_num,
                        bnk_cli_id,
                        account_extra,
                        dept_no,
                        prod_id,
                        foreign_id,
                        channel_id,
                        is_suspicious,
                        relation_id,
                        flags,
                        cashier,
                        chk_serie,
                        treasury_code,
                        tax_code_or_pid,
                        por,
                        sender_bank_code,
                        sender_bank_name,
                        sender_acc,
                        sender_acc_name,
                        sender_tax_code,
                        receiver_bank_code,
                        receiver_bank_name,
                        receiver_acc,
                        receiver_acc_name,
                        receiver_tax_code,
                        extra_info,
                        ref_num,
                        rec_date,
                        saxazkod,
                        intermed_bank_code,
                        intermed_bank_name,
                        swift_text,
                        cor_bank_code,
                        cor_bank_name,
                        det_of_charg,
                        extra_info_descrip,
                        first_name,
                        last_name,
                        fathers_name,
                        birth_date,
                        birth_place,
                        address_jur,
                        address_lat,
                        country,
                        passport_type_id,
                        passport,
                        personal_id,
                        reg_organ,
                        passport_issue_dt,
                        passport_end_date,
                        check_saldo,
                        add_tariff,
                        info,
                        lat,
                        pid,
                        tax_payer_tax_code,
                        tax_payer_name,
                        fast_payment,
                        is_b2b,
                        ttc_code,
                        sender_address_lat,
                        receiver_address_lat,
                        sender_f50_option,
                        phone,
                        extra_descrip});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void AddDocAsync(
                    System.Nullable<int> user_id, 
                    System.Nullable<int> owner, 
                    System.Nullable<int> doc_type, 
                    System.Nullable<System.DateTime> doc_date, 
                    System.Nullable<System.DateTime> doc_date_in_doc, 
                    System.Nullable<long> debit_id, 
                    System.Nullable<long> credit_id, 
                    string iso, 
                    System.Nullable<decimal> amount, 
                    System.Nullable<int> rec_state, 
                    string descrip, 
                    string op_code, 
                    System.Nullable<int> parent_rec_id, 
                    System.Nullable<int> doc_num, 
                    System.Nullable<int> bnk_cli_id, 
                    System.Nullable<long> account_extra, 
                    System.Nullable<int> dept_no, 
                    System.Nullable<int> prod_id, 
                    System.Nullable<int> foreign_id, 
                    System.Nullable<int> channel_id, 
                    System.Nullable<bool> is_suspicious, 
                    System.Nullable<int> relation_id, 
                    System.Nullable<int> flags, 
                    System.Nullable<int> cashier, 
                    string chk_serie, 
                    string treasury_code, 
                    string tax_code_or_pid, 
                    System.Nullable<int> por, 
                    string sender_bank_code, 
                    string sender_bank_name, 
                    string sender_acc, 
                    string sender_acc_name, 
                    string sender_tax_code, 
                    string receiver_bank_code, 
                    string receiver_bank_name, 
                    string receiver_acc, 
                    string receiver_acc_name, 
                    string receiver_tax_code, 
                    string extra_info, 
                    string ref_num, 
                    System.Nullable<System.DateTime> rec_date, 
                    string saxazkod, 
                    string intermed_bank_code, 
                    string intermed_bank_name, 
                    string swift_text, 
                    string cor_bank_code, 
                    string cor_bank_name, 
                    string det_of_charg, 
                    System.Nullable<bool> extra_info_descrip, 
                    string first_name, 
                    string last_name, 
                    string fathers_name, 
                    System.Nullable<System.DateTime> birth_date, 
                    string birth_place, 
                    string address_jur, 
                    string address_lat, 
                    string country, 
                    System.Nullable<int> passport_type_id, 
                    string passport, 
                    string personal_id, 
                    string reg_organ, 
                    System.Nullable<System.DateTime> passport_issue_dt, 
                    System.Nullable<System.DateTime> passport_end_date, 
                    System.Nullable<bool> check_saldo, 
                    System.Nullable<bool> add_tariff, 
                    System.Nullable<bool> info, 
                    System.Nullable<bool> lat, 
                    string pid, 
                    string tax_payer_tax_code, 
                    string tax_payer_name, 
                    System.Nullable<bool> fast_payment, 
                    System.Nullable<bool> is_b2b, 
                    string ttc_code, 
                    string sender_address_lat, 
                    string receiver_address_lat, 
                    string sender_f50_option, 
                    string phone, 
                    string extra_descrip) {
            this.AddDocAsync(user_id, owner, doc_type, doc_date, doc_date_in_doc, debit_id, credit_id, iso, amount, rec_state, descrip, op_code, parent_rec_id, doc_num, bnk_cli_id, account_extra, dept_no, prod_id, foreign_id, channel_id, is_suspicious, relation_id, flags, cashier, chk_serie, treasury_code, tax_code_or_pid, por, sender_bank_code, sender_bank_name, sender_acc, sender_acc_name, sender_tax_code, receiver_bank_code, receiver_bank_name, receiver_acc, receiver_acc_name, receiver_tax_code, extra_info, ref_num, rec_date, saxazkod, intermed_bank_code, intermed_bank_name, swift_text, cor_bank_code, cor_bank_name, det_of_charg, extra_info_descrip, first_name, last_name, fathers_name, birth_date, birth_place, address_jur, address_lat, country, passport_type_id, passport, personal_id, reg_organ, passport_issue_dt, passport_end_date, check_saldo, add_tariff, info, lat, pid, tax_payer_tax_code, tax_payer_name, fast_payment, is_b2b, ttc_code, sender_address_lat, receiver_address_lat, sender_f50_option, phone, extra_descrip, null);
        }
        
        /// <remarks/>
        public void AddDocAsync(
                    System.Nullable<int> user_id, 
                    System.Nullable<int> owner, 
                    System.Nullable<int> doc_type, 
                    System.Nullable<System.DateTime> doc_date, 
                    System.Nullable<System.DateTime> doc_date_in_doc, 
                    System.Nullable<long> debit_id, 
                    System.Nullable<long> credit_id, 
                    string iso, 
                    System.Nullable<decimal> amount, 
                    System.Nullable<int> rec_state, 
                    string descrip, 
                    string op_code, 
                    System.Nullable<int> parent_rec_id, 
                    System.Nullable<int> doc_num, 
                    System.Nullable<int> bnk_cli_id, 
                    System.Nullable<long> account_extra, 
                    System.Nullable<int> dept_no, 
                    System.Nullable<int> prod_id, 
                    System.Nullable<int> foreign_id, 
                    System.Nullable<int> channel_id, 
                    System.Nullable<bool> is_suspicious, 
                    System.Nullable<int> relation_id, 
                    System.Nullable<int> flags, 
                    System.Nullable<int> cashier, 
                    string chk_serie, 
                    string treasury_code, 
                    string tax_code_or_pid, 
                    System.Nullable<int> por, 
                    string sender_bank_code, 
                    string sender_bank_name, 
                    string sender_acc, 
                    string sender_acc_name, 
                    string sender_tax_code, 
                    string receiver_bank_code, 
                    string receiver_bank_name, 
                    string receiver_acc, 
                    string receiver_acc_name, 
                    string receiver_tax_code, 
                    string extra_info, 
                    string ref_num, 
                    System.Nullable<System.DateTime> rec_date, 
                    string saxazkod, 
                    string intermed_bank_code, 
                    string intermed_bank_name, 
                    string swift_text, 
                    string cor_bank_code, 
                    string cor_bank_name, 
                    string det_of_charg, 
                    System.Nullable<bool> extra_info_descrip, 
                    string first_name, 
                    string last_name, 
                    string fathers_name, 
                    System.Nullable<System.DateTime> birth_date, 
                    string birth_place, 
                    string address_jur, 
                    string address_lat, 
                    string country, 
                    System.Nullable<int> passport_type_id, 
                    string passport, 
                    string personal_id, 
                    string reg_organ, 
                    System.Nullable<System.DateTime> passport_issue_dt, 
                    System.Nullable<System.DateTime> passport_end_date, 
                    System.Nullable<bool> check_saldo, 
                    System.Nullable<bool> add_tariff, 
                    System.Nullable<bool> info, 
                    System.Nullable<bool> lat, 
                    string pid, 
                    string tax_payer_tax_code, 
                    string tax_payer_name, 
                    System.Nullable<bool> fast_payment, 
                    System.Nullable<bool> is_b2b, 
                    string ttc_code, 
                    string sender_address_lat, 
                    string receiver_address_lat, 
                    string sender_f50_option, 
                    string phone, 
                    string extra_descrip, 
                    object userState) {
            if ((this.AddDocOperationCompleted == null)) {
                this.AddDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDocOperationCompleted);
            }
            this.InvokeAsync("AddDoc", new object[] {
                        user_id,
                        owner,
                        doc_type,
                        doc_date,
                        doc_date_in_doc,
                        debit_id,
                        credit_id,
                        iso,
                        amount,
                        rec_state,
                        descrip,
                        op_code,
                        parent_rec_id,
                        doc_num,
                        bnk_cli_id,
                        account_extra,
                        dept_no,
                        prod_id,
                        foreign_id,
                        channel_id,
                        is_suspicious,
                        relation_id,
                        flags,
                        cashier,
                        chk_serie,
                        treasury_code,
                        tax_code_or_pid,
                        por,
                        sender_bank_code,
                        sender_bank_name,
                        sender_acc,
                        sender_acc_name,
                        sender_tax_code,
                        receiver_bank_code,
                        receiver_bank_name,
                        receiver_acc,
                        receiver_acc_name,
                        receiver_tax_code,
                        extra_info,
                        ref_num,
                        rec_date,
                        saxazkod,
                        intermed_bank_code,
                        intermed_bank_name,
                        swift_text,
                        cor_bank_code,
                        cor_bank_name,
                        det_of_charg,
                        extra_info_descrip,
                        first_name,
                        last_name,
                        fathers_name,
                        birth_date,
                        birth_place,
                        address_jur,
                        address_lat,
                        country,
                        passport_type_id,
                        passport,
                        personal_id,
                        reg_organ,
                        passport_issue_dt,
                        passport_end_date,
                        check_saldo,
                        add_tariff,
                        info,
                        lat,
                        pid,
                        tax_payer_tax_code,
                        tax_payer_name,
                        fast_payment,
                        is_b2b,
                        ttc_code,
                        sender_address_lat,
                        receiver_address_lat,
                        sender_f50_option,
                        phone,
                        extra_descrip}, this.AddDocOperationCompleted, userState);
        }
        
        private void OnAddDocOperationCompleted(object arg) {
            if ((this.AddDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDocCompleted(this, new AddDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer CheckDoc(string op_code, int foreign_id) {
            object[] results = this.Invoke("CheckDoc", new object[] {
                        op_code,
                        foreign_id});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDocAsync(string op_code, int foreign_id) {
            this.CheckDocAsync(op_code, foreign_id, null);
        }
        
        /// <remarks/>
        public void CheckDocAsync(string op_code, int foreign_id, object userState) {
            if ((this.CheckDocOperationCompleted == null)) {
                this.CheckDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDocOperationCompleted);
            }
            this.InvokeAsync("CheckDoc", new object[] {
                        op_code,
                        foreign_id}, this.CheckDocOperationCompleted, userState);
        }
        
        private void OnCheckDocOperationCompleted(object arg) {
            if ((this.CheckDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDocCompleted(this, new CheckDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddConvDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer AddConvDoc(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> user_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> owner, 
                    string iso_d, 
                    string iso_c, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> amount_d, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> amount_c, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> debit_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> credit_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> doc_date, 
                    string op_code, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> doc_num, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> account_extra, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> is_kassa, 
                    string descrip1, 
                    string descrip2, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> rec_state, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> bnk_cli_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> parent_rec_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> dept_no, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> prod_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> foreign_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> channel_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> is_suspicious, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> rate_items, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> rate_amount, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> rate_reverse, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> rate_flags, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> tariff_kind, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> lat_descrip, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> client_no, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> rate_client_no, 
                    string first_name, 
                    string last_name, 
                    string fathers_name, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> birth_date, 
                    string birth_place, 
                    string address_jur, 
                    string address_lat, 
                    string country, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> passport_type_id, 
                    string passport, 
                    string personal_id, 
                    string reg_organ, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> passport_issue_dt, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> passport_end_date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> check_saldo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> add_tariff, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> info, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> lat, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> withNbgRate) {
            object[] results = this.Invoke("AddConvDoc", new object[] {
                        user_id,
                        owner,
                        iso_d,
                        iso_c,
                        amount_d,
                        amount_c,
                        debit_id,
                        credit_id,
                        doc_date,
                        op_code,
                        doc_num,
                        account_extra,
                        is_kassa,
                        descrip1,
                        descrip2,
                        rec_state,
                        bnk_cli_id,
                        parent_rec_id,
                        dept_no,
                        prod_id,
                        foreign_id,
                        channel_id,
                        is_suspicious,
                        rate_items,
                        rate_amount,
                        rate_reverse,
                        rate_flags,
                        tariff_kind,
                        lat_descrip,
                        client_no,
                        rate_client_no,
                        first_name,
                        last_name,
                        fathers_name,
                        birth_date,
                        birth_place,
                        address_jur,
                        address_lat,
                        country,
                        passport_type_id,
                        passport,
                        personal_id,
                        reg_organ,
                        passport_issue_dt,
                        passport_end_date,
                        check_saldo,
                        add_tariff,
                        info,
                        lat,
                        withNbgRate});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void AddConvDocAsync(
                    System.Nullable<int> user_id, 
                    System.Nullable<int> owner, 
                    string iso_d, 
                    string iso_c, 
                    System.Nullable<decimal> amount_d, 
                    System.Nullable<decimal> amount_c, 
                    System.Nullable<long> debit_id, 
                    System.Nullable<long> credit_id, 
                    System.Nullable<System.DateTime> doc_date, 
                    string op_code, 
                    System.Nullable<int> doc_num, 
                    System.Nullable<long> account_extra, 
                    System.Nullable<bool> is_kassa, 
                    string descrip1, 
                    string descrip2, 
                    System.Nullable<int> rec_state, 
                    System.Nullable<int> bnk_cli_id, 
                    System.Nullable<int> parent_rec_id, 
                    System.Nullable<int> dept_no, 
                    System.Nullable<int> prod_id, 
                    System.Nullable<int> foreign_id, 
                    System.Nullable<int> channel_id, 
                    System.Nullable<bool> is_suspicious, 
                    System.Nullable<int> rate_items, 
                    System.Nullable<decimal> rate_amount, 
                    System.Nullable<bool> rate_reverse, 
                    System.Nullable<int> rate_flags, 
                    System.Nullable<bool> tariff_kind, 
                    System.Nullable<bool> lat_descrip, 
                    System.Nullable<int> client_no, 
                    System.Nullable<int> rate_client_no, 
                    string first_name, 
                    string last_name, 
                    string fathers_name, 
                    System.Nullable<System.DateTime> birth_date, 
                    string birth_place, 
                    string address_jur, 
                    string address_lat, 
                    string country, 
                    System.Nullable<int> passport_type_id, 
                    string passport, 
                    string personal_id, 
                    string reg_organ, 
                    System.Nullable<System.DateTime> passport_issue_dt, 
                    System.Nullable<System.DateTime> passport_end_date, 
                    System.Nullable<bool> check_saldo, 
                    System.Nullable<bool> add_tariff, 
                    System.Nullable<bool> info, 
                    System.Nullable<bool> lat, 
                    System.Nullable<bool> withNbgRate) {
            this.AddConvDocAsync(user_id, owner, iso_d, iso_c, amount_d, amount_c, debit_id, credit_id, doc_date, op_code, doc_num, account_extra, is_kassa, descrip1, descrip2, rec_state, bnk_cli_id, parent_rec_id, dept_no, prod_id, foreign_id, channel_id, is_suspicious, rate_items, rate_amount, rate_reverse, rate_flags, tariff_kind, lat_descrip, client_no, rate_client_no, first_name, last_name, fathers_name, birth_date, birth_place, address_jur, address_lat, country, passport_type_id, passport, personal_id, reg_organ, passport_issue_dt, passport_end_date, check_saldo, add_tariff, info, lat, withNbgRate, null);
        }
        
        /// <remarks/>
        public void AddConvDocAsync(
                    System.Nullable<int> user_id, 
                    System.Nullable<int> owner, 
                    string iso_d, 
                    string iso_c, 
                    System.Nullable<decimal> amount_d, 
                    System.Nullable<decimal> amount_c, 
                    System.Nullable<long> debit_id, 
                    System.Nullable<long> credit_id, 
                    System.Nullable<System.DateTime> doc_date, 
                    string op_code, 
                    System.Nullable<int> doc_num, 
                    System.Nullable<long> account_extra, 
                    System.Nullable<bool> is_kassa, 
                    string descrip1, 
                    string descrip2, 
                    System.Nullable<int> rec_state, 
                    System.Nullable<int> bnk_cli_id, 
                    System.Nullable<int> parent_rec_id, 
                    System.Nullable<int> dept_no, 
                    System.Nullable<int> prod_id, 
                    System.Nullable<int> foreign_id, 
                    System.Nullable<int> channel_id, 
                    System.Nullable<bool> is_suspicious, 
                    System.Nullable<int> rate_items, 
                    System.Nullable<decimal> rate_amount, 
                    System.Nullable<bool> rate_reverse, 
                    System.Nullable<int> rate_flags, 
                    System.Nullable<bool> tariff_kind, 
                    System.Nullable<bool> lat_descrip, 
                    System.Nullable<int> client_no, 
                    System.Nullable<int> rate_client_no, 
                    string first_name, 
                    string last_name, 
                    string fathers_name, 
                    System.Nullable<System.DateTime> birth_date, 
                    string birth_place, 
                    string address_jur, 
                    string address_lat, 
                    string country, 
                    System.Nullable<int> passport_type_id, 
                    string passport, 
                    string personal_id, 
                    string reg_organ, 
                    System.Nullable<System.DateTime> passport_issue_dt, 
                    System.Nullable<System.DateTime> passport_end_date, 
                    System.Nullable<bool> check_saldo, 
                    System.Nullable<bool> add_tariff, 
                    System.Nullable<bool> info, 
                    System.Nullable<bool> lat, 
                    System.Nullable<bool> withNbgRate, 
                    object userState) {
            if ((this.AddConvDocOperationCompleted == null)) {
                this.AddConvDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddConvDocOperationCompleted);
            }
            this.InvokeAsync("AddConvDoc", new object[] {
                        user_id,
                        owner,
                        iso_d,
                        iso_c,
                        amount_d,
                        amount_c,
                        debit_id,
                        credit_id,
                        doc_date,
                        op_code,
                        doc_num,
                        account_extra,
                        is_kassa,
                        descrip1,
                        descrip2,
                        rec_state,
                        bnk_cli_id,
                        parent_rec_id,
                        dept_no,
                        prod_id,
                        foreign_id,
                        channel_id,
                        is_suspicious,
                        rate_items,
                        rate_amount,
                        rate_reverse,
                        rate_flags,
                        tariff_kind,
                        lat_descrip,
                        client_no,
                        rate_client_no,
                        first_name,
                        last_name,
                        fathers_name,
                        birth_date,
                        birth_place,
                        address_jur,
                        address_lat,
                        country,
                        passport_type_id,
                        passport,
                        personal_id,
                        reg_organ,
                        passport_issue_dt,
                        passport_end_date,
                        check_saldo,
                        add_tariff,
                        info,
                        lat,
                        withNbgRate}, this.AddConvDocOperationCompleted, userState);
        }
        
        private void OnAddConvDocOperationCompleted(object arg) {
            if ((this.AddConvDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddConvDocCompleted(this, new AddConvDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer DeleteDoc(int rec_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> user_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> check_saldo) {
            object[] results = this.Invoke("DeleteDoc", new object[] {
                        rec_id,
                        user_id,
                        check_saldo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDocAsync(int rec_id, System.Nullable<int> user_id, System.Nullable<bool> check_saldo) {
            this.DeleteDocAsync(rec_id, user_id, check_saldo, null);
        }
        
        /// <remarks/>
        public void DeleteDocAsync(int rec_id, System.Nullable<int> user_id, System.Nullable<bool> check_saldo, object userState) {
            if ((this.DeleteDocOperationCompleted == null)) {
                this.DeleteDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocOperationCompleted);
            }
            this.InvokeAsync("DeleteDoc", new object[] {
                        rec_id,
                        user_id,
                        check_saldo}, this.DeleteDocOperationCompleted, userState);
        }
        
        private void OnDeleteDocOperationCompleted(object arg) {
            if ((this.DeleteDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocCompleted(this, new DeleteDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer CreateAccount(int userID, int branchID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> deptNo, int clientNo, decimal balAccount, string iso, string classif, string descrip, string descripLat, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> actPas, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> accType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> recState, string classifNew) {
            object[] results = this.Invoke("CreateAccount", new object[] {
                        userID,
                        branchID,
                        deptNo,
                        clientNo,
                        balAccount,
                        iso,
                        classif,
                        descrip,
                        descripLat,
                        actPas,
                        accType,
                        recState,
                        classifNew});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccountAsync(int userID, int branchID, System.Nullable<int> deptNo, int clientNo, decimal balAccount, string iso, string classif, string descrip, string descripLat, System.Nullable<int> actPas, System.Nullable<int> accType, System.Nullable<int> recState, string classifNew) {
            this.CreateAccountAsync(userID, branchID, deptNo, clientNo, balAccount, iso, classif, descrip, descripLat, actPas, accType, recState, classifNew, null);
        }
        
        /// <remarks/>
        public void CreateAccountAsync(int userID, int branchID, System.Nullable<int> deptNo, int clientNo, decimal balAccount, string iso, string classif, string descrip, string descripLat, System.Nullable<int> actPas, System.Nullable<int> accType, System.Nullable<int> recState, string classifNew, object userState) {
            if ((this.CreateAccountOperationCompleted == null)) {
                this.CreateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountOperationCompleted);
            }
            this.InvokeAsync("CreateAccount", new object[] {
                        userID,
                        branchID,
                        deptNo,
                        clientNo,
                        balAccount,
                        iso,
                        classif,
                        descrip,
                        descripLat,
                        actPas,
                        accType,
                        recState,
                        classifNew}, this.CreateAccountOperationCompleted, userState);
        }
        
        private void OnCreateAccountOperationCompleted(object arg) {
            if ((this.CreateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccountCompleted(this, new CreateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateAccount_new", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer CreateAccount_new(
                    int userID, 
                    int branchID, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> deptNo, 
                    int clientNo, 
                    decimal balAccount, 
                    string iso, 
                    string classif, 
                    string descrip, 
                    string descripLat, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> actPas, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> accType, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> recState, 
                    string classifNew, 
                    string loancontractid, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> product_no, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> tariff, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> min_amount) {
            object[] results = this.Invoke("CreateAccount_new", new object[] {
                        userID,
                        branchID,
                        deptNo,
                        clientNo,
                        balAccount,
                        iso,
                        classif,
                        descrip,
                        descripLat,
                        actPas,
                        accType,
                        recState,
                        classifNew,
                        loancontractid,
                        product_no,
                        tariff,
                        min_amount});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccount_newAsync(
                    int userID, 
                    int branchID, 
                    System.Nullable<int> deptNo, 
                    int clientNo, 
                    decimal balAccount, 
                    string iso, 
                    string classif, 
                    string descrip, 
                    string descripLat, 
                    System.Nullable<int> actPas, 
                    System.Nullable<int> accType, 
                    System.Nullable<int> recState, 
                    string classifNew, 
                    string loancontractid, 
                    System.Nullable<int> product_no, 
                    System.Nullable<int> tariff, 
                    System.Nullable<decimal> min_amount) {
            this.CreateAccount_newAsync(userID, branchID, deptNo, clientNo, balAccount, iso, classif, descrip, descripLat, actPas, accType, recState, classifNew, loancontractid, product_no, tariff, min_amount, null);
        }
        
        /// <remarks/>
        public void CreateAccount_newAsync(
                    int userID, 
                    int branchID, 
                    System.Nullable<int> deptNo, 
                    int clientNo, 
                    decimal balAccount, 
                    string iso, 
                    string classif, 
                    string descrip, 
                    string descripLat, 
                    System.Nullable<int> actPas, 
                    System.Nullable<int> accType, 
                    System.Nullable<int> recState, 
                    string classifNew, 
                    string loancontractid, 
                    System.Nullable<int> product_no, 
                    System.Nullable<int> tariff, 
                    System.Nullable<decimal> min_amount, 
                    object userState) {
            if ((this.CreateAccount_newOperationCompleted == null)) {
                this.CreateAccount_newOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccount_newOperationCompleted);
            }
            this.InvokeAsync("CreateAccount_new", new object[] {
                        userID,
                        branchID,
                        deptNo,
                        clientNo,
                        balAccount,
                        iso,
                        classif,
                        descrip,
                        descripLat,
                        actPas,
                        accType,
                        recState,
                        classifNew,
                        loancontractid,
                        product_no,
                        tariff,
                        min_amount}, this.CreateAccount_newOperationCompleted, userState);
        }
        
        private void OnCreateAccount_newOperationCompleted(object arg) {
            if ((this.CreateAccount_newCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccount_newCompleted(this, new CreateAccount_newCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateAccount_multi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer CreateAccount_multi(int userID, int accID, decimal balAccount, string iso) {
            object[] results = this.Invoke("CreateAccount_multi", new object[] {
                        userID,
                        accID,
                        balAccount,
                        iso});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccount_multiAsync(int userID, int accID, decimal balAccount, string iso) {
            this.CreateAccount_multiAsync(userID, accID, balAccount, iso, null);
        }
        
        /// <remarks/>
        public void CreateAccount_multiAsync(int userID, int accID, decimal balAccount, string iso, object userState) {
            if ((this.CreateAccount_multiOperationCompleted == null)) {
                this.CreateAccount_multiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccount_multiOperationCompleted);
            }
            this.InvokeAsync("CreateAccount_multi", new object[] {
                        userID,
                        accID,
                        balAccount,
                        iso}, this.CreateAccount_multiOperationCompleted, userState);
        }
        
        private void OnCreateAccount_multiOperationCompleted(object arg) {
            if ((this.CreateAccount_multiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccount_multiCompleted(this, new CreateAccount_multiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateAccountwithProduct_multi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer CreateAccountwithProduct_multi(int userID, int accID, decimal balAccount, string iso, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> product_no) {
            object[] results = this.Invoke("CreateAccountwithProduct_multi", new object[] {
                        userID,
                        accID,
                        balAccount,
                        iso,
                        product_no});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccountwithProduct_multiAsync(int userID, int accID, decimal balAccount, string iso, System.Nullable<int> product_no) {
            this.CreateAccountwithProduct_multiAsync(userID, accID, balAccount, iso, product_no, null);
        }
        
        /// <remarks/>
        public void CreateAccountwithProduct_multiAsync(int userID, int accID, decimal balAccount, string iso, System.Nullable<int> product_no, object userState) {
            if ((this.CreateAccountwithProduct_multiOperationCompleted == null)) {
                this.CreateAccountwithProduct_multiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountwithProduct_multiOperationCompleted);
            }
            this.InvokeAsync("CreateAccountwithProduct_multi", new object[] {
                        userID,
                        accID,
                        balAccount,
                        iso,
                        product_no}, this.CreateAccountwithProduct_multiOperationCompleted, userState);
        }
        
        private void OnCreateAccountwithProduct_multiOperationCompleted(object arg) {
            if ((this.CreateAccountwithProduct_multiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccountwithProduct_multiCompleted(this, new CreateAccountwithProduct_multiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateAccountForLoans", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer CreateAccountForLoans(int applicationID) {
            object[] results = this.Invoke("CreateAccountForLoans", new object[] {
                        applicationID});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccountForLoansAsync(int applicationID) {
            this.CreateAccountForLoansAsync(applicationID, null);
        }
        
        /// <remarks/>
        public void CreateAccountForLoansAsync(int applicationID, object userState) {
            if ((this.CreateAccountForLoansOperationCompleted == null)) {
                this.CreateAccountForLoansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountForLoansOperationCompleted);
            }
            this.InvokeAsync("CreateAccountForLoans", new object[] {
                        applicationID}, this.CreateAccountForLoansOperationCompleted, userState);
        }
        
        private void OnCreateAccountForLoansOperationCompleted(object arg) {
            if ((this.CreateAccountForLoansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccountForLoansCompleted(this, new CreateAccountForLoansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateAccountForLoans2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer CreateAccountForLoans2(int applicationID, int product_no) {
            object[] results = this.Invoke("CreateAccountForLoans2", new object[] {
                        applicationID,
                        product_no});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccountForLoans2Async(int applicationID, int product_no) {
            this.CreateAccountForLoans2Async(applicationID, product_no, null);
        }
        
        /// <remarks/>
        public void CreateAccountForLoans2Async(int applicationID, int product_no, object userState) {
            if ((this.CreateAccountForLoans2OperationCompleted == null)) {
                this.CreateAccountForLoans2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountForLoans2OperationCompleted);
            }
            this.InvokeAsync("CreateAccountForLoans2", new object[] {
                        applicationID,
                        product_no}, this.CreateAccountForLoans2OperationCompleted, userState);
        }
        
        private void OnCreateAccountForLoans2OperationCompleted(object arg) {
            if ((this.CreateAccountForLoans2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccountForLoans2Completed(this, new CreateAccountForLoans2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateAccountByCurentAcc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer CreateAccountByCurentAcc(int userID, int branchID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> deptNo, int clientNo, decimal balAccount, string iso, string classif, string descrip, string descripLat, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> actPas, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> accType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> recState, string classifNew, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> CurentAccount, string CurentAccountISO) {
            object[] results = this.Invoke("CreateAccountByCurentAcc", new object[] {
                        userID,
                        branchID,
                        deptNo,
                        clientNo,
                        balAccount,
                        iso,
                        classif,
                        descrip,
                        descripLat,
                        actPas,
                        accType,
                        recState,
                        classifNew,
                        CurentAccount,
                        CurentAccountISO});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccountByCurentAccAsync(int userID, int branchID, System.Nullable<int> deptNo, int clientNo, decimal balAccount, string iso, string classif, string descrip, string descripLat, System.Nullable<int> actPas, System.Nullable<int> accType, System.Nullable<int> recState, string classifNew, System.Nullable<decimal> CurentAccount, string CurentAccountISO) {
            this.CreateAccountByCurentAccAsync(userID, branchID, deptNo, clientNo, balAccount, iso, classif, descrip, descripLat, actPas, accType, recState, classifNew, CurentAccount, CurentAccountISO, null);
        }
        
        /// <remarks/>
        public void CreateAccountByCurentAccAsync(
                    int userID, 
                    int branchID, 
                    System.Nullable<int> deptNo, 
                    int clientNo, 
                    decimal balAccount, 
                    string iso, 
                    string classif, 
                    string descrip, 
                    string descripLat, 
                    System.Nullable<int> actPas, 
                    System.Nullable<int> accType, 
                    System.Nullable<int> recState, 
                    string classifNew, 
                    System.Nullable<decimal> CurentAccount, 
                    string CurentAccountISO, 
                    object userState) {
            if ((this.CreateAccountByCurentAccOperationCompleted == null)) {
                this.CreateAccountByCurentAccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountByCurentAccOperationCompleted);
            }
            this.InvokeAsync("CreateAccountByCurentAcc", new object[] {
                        userID,
                        branchID,
                        deptNo,
                        clientNo,
                        balAccount,
                        iso,
                        classif,
                        descrip,
                        descripLat,
                        actPas,
                        accType,
                        recState,
                        classifNew,
                        CurentAccount,
                        CurentAccountISO}, this.CreateAccountByCurentAccOperationCompleted, userState);
        }
        
        private void OnCreateAccountByCurentAccOperationCompleted(object arg) {
            if ((this.CreateAccountByCurentAccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccountByCurentAccCompleted(this, new CreateAccountByCurentAccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAccountID([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> userID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> branchID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> deptNo, long accNumber, string accIso) {
            object[] results = this.Invoke("GetAccountID", new object[] {
                        userID,
                        branchID,
                        deptNo,
                        accNumber,
                        accIso});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountIDAsync(System.Nullable<int> userID, System.Nullable<int> branchID, System.Nullable<int> deptNo, long accNumber, string accIso) {
            this.GetAccountIDAsync(userID, branchID, deptNo, accNumber, accIso, null);
        }
        
        /// <remarks/>
        public void GetAccountIDAsync(System.Nullable<int> userID, System.Nullable<int> branchID, System.Nullable<int> deptNo, long accNumber, string accIso, object userState) {
            if ((this.GetAccountIDOperationCompleted == null)) {
                this.GetAccountIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountIDOperationCompleted);
            }
            this.InvokeAsync("GetAccountID", new object[] {
                        userID,
                        branchID,
                        deptNo,
                        accNumber,
                        accIso}, this.GetAccountIDOperationCompleted, userState);
        }
        
        private void OnGetAccountIDOperationCompleted(object arg) {
            if ((this.GetAccountIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountIDCompleted(this, new GetAccountIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountID2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAccountID2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> userID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> branchID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> deptNo, int clientNo, long accNumber, string accIso) {
            object[] results = this.Invoke("GetAccountID2", new object[] {
                        userID,
                        branchID,
                        deptNo,
                        clientNo,
                        accNumber,
                        accIso});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountID2Async(System.Nullable<int> userID, System.Nullable<int> branchID, System.Nullable<int> deptNo, int clientNo, long accNumber, string accIso) {
            this.GetAccountID2Async(userID, branchID, deptNo, clientNo, accNumber, accIso, null);
        }
        
        /// <remarks/>
        public void GetAccountID2Async(System.Nullable<int> userID, System.Nullable<int> branchID, System.Nullable<int> deptNo, int clientNo, long accNumber, string accIso, object userState) {
            if ((this.GetAccountID2OperationCompleted == null)) {
                this.GetAccountID2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountID2OperationCompleted);
            }
            this.InvokeAsync("GetAccountID2", new object[] {
                        userID,
                        branchID,
                        deptNo,
                        clientNo,
                        accNumber,
                        accIso}, this.GetAccountID2OperationCompleted, userState);
        }
        
        private void OnGetAccountID2OperationCompleted(object arg) {
            if ((this.GetAccountID2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountID2Completed(this, new GetAccountID2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCorrAccountID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetCorrAccountID(string iso) {
            object[] results = this.Invoke("GetCorrAccountID", new object[] {
                        iso});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCorrAccountIDAsync(string iso) {
            this.GetCorrAccountIDAsync(iso, null);
        }
        
        /// <remarks/>
        public void GetCorrAccountIDAsync(string iso, object userState) {
            if ((this.GetCorrAccountIDOperationCompleted == null)) {
                this.GetCorrAccountIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCorrAccountIDOperationCompleted);
            }
            this.InvokeAsync("GetCorrAccountID", new object[] {
                        iso}, this.GetCorrAccountIDOperationCompleted, userState);
        }
        
        private void OnGetCorrAccountIDOperationCompleted(object arg) {
            if ((this.GetCorrAccountIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCorrAccountIDCompleted(this, new GetCorrAccountIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountID_IBAN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAccountID_IBAN(string accIBAN, string accIso) {
            object[] results = this.Invoke("GetAccountID_IBAN", new object[] {
                        accIBAN,
                        accIso});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountID_IBANAsync(string accIBAN, string accIso) {
            this.GetAccountID_IBANAsync(accIBAN, accIso, null);
        }
        
        /// <remarks/>
        public void GetAccountID_IBANAsync(string accIBAN, string accIso, object userState) {
            if ((this.GetAccountID_IBANOperationCompleted == null)) {
                this.GetAccountID_IBANOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountID_IBANOperationCompleted);
            }
            this.InvokeAsync("GetAccountID_IBAN", new object[] {
                        accIBAN,
                        accIso}, this.GetAccountID_IBANOperationCompleted, userState);
        }
        
        private void OnGetAccountID_IBANOperationCompleted(object arg) {
            if ((this.GetAccountID_IBANCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountID_IBANCompleted(this, new GetAccountID_IBANCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountListByIban", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAccountListByIban(string accIban) {
            object[] results = this.Invoke("GetAccountListByIban", new object[] {
                        accIban});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountListByIbanAsync(string accIban) {
            this.GetAccountListByIbanAsync(accIban, null);
        }
        
        /// <remarks/>
        public void GetAccountListByIbanAsync(string accIban, object userState) {
            if ((this.GetAccountListByIbanOperationCompleted == null)) {
                this.GetAccountListByIbanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountListByIbanOperationCompleted);
            }
            this.InvokeAsync("GetAccountListByIban", new object[] {
                        accIban}, this.GetAccountListByIbanOperationCompleted, userState);
        }
        
        private void OnGetAccountListByIbanOperationCompleted(object arg) {
            if ((this.GetAccountListByIbanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountListByIbanCompleted(this, new GetAccountListByIbanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTarifAmount4view", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetTarifAmount4view(int debit_id, int doc_type, decimal amount) {
            object[] results = this.Invoke("GetTarifAmount4view", new object[] {
                        debit_id,
                        doc_type,
                        amount});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetTarifAmount4viewAsync(int debit_id, int doc_type, decimal amount) {
            this.GetTarifAmount4viewAsync(debit_id, doc_type, amount, null);
        }
        
        /// <remarks/>
        public void GetTarifAmount4viewAsync(int debit_id, int doc_type, decimal amount, object userState) {
            if ((this.GetTarifAmount4viewOperationCompleted == null)) {
                this.GetTarifAmount4viewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTarifAmount4viewOperationCompleted);
            }
            this.InvokeAsync("GetTarifAmount4view", new object[] {
                        debit_id,
                        doc_type,
                        amount}, this.GetTarifAmount4viewOperationCompleted, userState);
        }
        
        private void OnGetTarifAmount4viewOperationCompleted(object arg) {
            if ((this.GetTarifAmount4viewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTarifAmount4viewCompleted(this, new GetTarifAmount4viewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chk_books_for_account", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer chk_books_for_account(string accIBAN) {
            object[] results = this.Invoke("chk_books_for_account", new object[] {
                        accIBAN});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void chk_books_for_accountAsync(string accIBAN) {
            this.chk_books_for_accountAsync(accIBAN, null);
        }
        
        /// <remarks/>
        public void chk_books_for_accountAsync(string accIBAN, object userState) {
            if ((this.chk_books_for_accountOperationCompleted == null)) {
                this.chk_books_for_accountOperationCompleted = new System.Threading.SendOrPostCallback(this.Onchk_books_for_accountOperationCompleted);
            }
            this.InvokeAsync("chk_books_for_account", new object[] {
                        accIBAN}, this.chk_books_for_accountOperationCompleted, userState);
        }
        
        private void Onchk_books_for_accountOperationCompleted(object arg) {
            if ((this.chk_books_for_accountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chk_books_for_accountCompleted(this, new chk_books_for_accountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chk_book_get", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer chk_book_get(int chk_id) {
            object[] results = this.Invoke("chk_book_get", new object[] {
                        chk_id});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void chk_book_getAsync(int chk_id) {
            this.chk_book_getAsync(chk_id, null);
        }
        
        /// <remarks/>
        public void chk_book_getAsync(int chk_id, object userState) {
            if ((this.chk_book_getOperationCompleted == null)) {
                this.chk_book_getOperationCompleted = new System.Threading.SendOrPostCallback(this.Onchk_book_getOperationCompleted);
            }
            this.InvokeAsync("chk_book_get", new object[] {
                        chk_id}, this.chk_book_getOperationCompleted, userState);
        }
        
        private void Onchk_book_getOperationCompleted(object arg) {
            if ((this.chk_book_getCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chk_book_getCompleted(this, new chk_book_getCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAccount(long accID) {
            object[] results = this.Invoke("GetAccount", new object[] {
                        accID});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountAsync(long accID) {
            this.GetAccountAsync(accID, null);
        }
        
        /// <remarks/>
        public void GetAccountAsync(long accID, object userState) {
            if ((this.GetAccountOperationCompleted == null)) {
                this.GetAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountOperationCompleted);
            }
            this.InvokeAsync("GetAccount", new object[] {
                        accID}, this.GetAccountOperationCompleted, userState);
        }
        
        private void OnGetAccountOperationCompleted(object arg) {
            if ((this.GetAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountCompleted(this, new GetAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountForTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAccountForTransfer(long accID) {
            object[] results = this.Invoke("GetAccountForTransfer", new object[] {
                        accID});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountForTransferAsync(long accID) {
            this.GetAccountForTransferAsync(accID, null);
        }
        
        /// <remarks/>
        public void GetAccountForTransferAsync(long accID, object userState) {
            if ((this.GetAccountForTransferOperationCompleted == null)) {
                this.GetAccountForTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountForTransferOperationCompleted);
            }
            this.InvokeAsync("GetAccountForTransfer", new object[] {
                        accID}, this.GetAccountForTransferOperationCompleted, userState);
        }
        
        private void OnGetAccountForTransferOperationCompleted(object arg) {
            if ((this.GetAccountForTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountForTransferCompleted(this, new GetAccountForTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountSaldo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAccountSaldo(long accID, System.DateTime date, int shadowLevel) {
            object[] results = this.Invoke("GetAccountSaldo", new object[] {
                        accID,
                        date,
                        shadowLevel});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountSaldoAsync(long accID, System.DateTime date, int shadowLevel) {
            this.GetAccountSaldoAsync(accID, date, shadowLevel, null);
        }
        
        /// <remarks/>
        public void GetAccountSaldoAsync(long accID, System.DateTime date, int shadowLevel, object userState) {
            if ((this.GetAccountSaldoOperationCompleted == null)) {
                this.GetAccountSaldoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountSaldoOperationCompleted);
            }
            this.InvokeAsync("GetAccountSaldo", new object[] {
                        accID,
                        date,
                        shadowLevel}, this.GetAccountSaldoOperationCompleted, userState);
        }
        
        private void OnGetAccountSaldoOperationCompleted(object arg) {
            if ((this.GetAccountSaldoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountSaldoCompleted(this, new GetAccountSaldoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAccountStatement(long accID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> startDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> endDate, int shadowLevel) {
            object[] results = this.Invoke("GetAccountStatement", new object[] {
                        accID,
                        startDate,
                        endDate,
                        shadowLevel});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountStatementAsync(long accID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int shadowLevel) {
            this.GetAccountStatementAsync(accID, startDate, endDate, shadowLevel, null);
        }
        
        /// <remarks/>
        public void GetAccountStatementAsync(long accID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int shadowLevel, object userState) {
            if ((this.GetAccountStatementOperationCompleted == null)) {
                this.GetAccountStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountStatementOperationCompleted);
            }
            this.InvokeAsync("GetAccountStatement", new object[] {
                        accID,
                        startDate,
                        endDate,
                        shadowLevel}, this.GetAccountStatementOperationCompleted, userState);
        }
        
        private void OnGetAccountStatementOperationCompleted(object arg) {
            if ((this.GetAccountStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountStatementCompleted(this, new GetAccountStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientStatement(int client_no, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetClientStatement", new object[] {
                        client_no,
                        startDate,
                        endDate});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientStatementAsync(int client_no, System.DateTime startDate, System.DateTime endDate) {
            this.GetClientStatementAsync(client_no, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetClientStatementAsync(int client_no, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetClientStatementOperationCompleted == null)) {
                this.GetClientStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientStatementOperationCompleted);
            }
            this.InvokeAsync("GetClientStatement", new object[] {
                        client_no,
                        startDate,
                        endDate}, this.GetClientStatementOperationCompleted, userState);
        }
        
        private void OnGetClientStatementOperationCompleted(object arg) {
            if ((this.GetClientStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientStatementCompleted(this, new GetClientStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountStatementExtended", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAccountStatementExtended(long accID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> startDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> endDate, int shadowLevel) {
            object[] results = this.Invoke("GetAccountStatementExtended", new object[] {
                        accID,
                        startDate,
                        endDate,
                        shadowLevel});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountStatementExtendedAsync(long accID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int shadowLevel) {
            this.GetAccountStatementExtendedAsync(accID, startDate, endDate, shadowLevel, null);
        }
        
        /// <remarks/>
        public void GetAccountStatementExtendedAsync(long accID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int shadowLevel, object userState) {
            if ((this.GetAccountStatementExtendedOperationCompleted == null)) {
                this.GetAccountStatementExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountStatementExtendedOperationCompleted);
            }
            this.InvokeAsync("GetAccountStatementExtended", new object[] {
                        accID,
                        startDate,
                        endDate,
                        shadowLevel}, this.GetAccountStatementExtendedOperationCompleted, userState);
        }
        
        private void OnGetAccountStatementExtendedOperationCompleted(object arg) {
            if ((this.GetAccountStatementExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountStatementExtendedCompleted(this, new GetAccountStatementExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountStatementPaged", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAccountStatementPaged(long accID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> startDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> endDate, int shadowLevel, string direction, int isBankCommission, int page, int rowsInPage) {
            object[] results = this.Invoke("GetAccountStatementPaged", new object[] {
                        accID,
                        startDate,
                        endDate,
                        shadowLevel,
                        direction,
                        isBankCommission,
                        page,
                        rowsInPage});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountStatementPagedAsync(long accID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int shadowLevel, string direction, int isBankCommission, int page, int rowsInPage) {
            this.GetAccountStatementPagedAsync(accID, startDate, endDate, shadowLevel, direction, isBankCommission, page, rowsInPage, null);
        }
        
        /// <remarks/>
        public void GetAccountStatementPagedAsync(long accID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int shadowLevel, string direction, int isBankCommission, int page, int rowsInPage, object userState) {
            if ((this.GetAccountStatementPagedOperationCompleted == null)) {
                this.GetAccountStatementPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountStatementPagedOperationCompleted);
            }
            this.InvokeAsync("GetAccountStatementPaged", new object[] {
                        accID,
                        startDate,
                        endDate,
                        shadowLevel,
                        direction,
                        isBankCommission,
                        page,
                        rowsInPage}, this.GetAccountStatementPagedOperationCompleted, userState);
        }
        
        private void OnGetAccountStatementPagedOperationCompleted(object arg) {
            if ((this.GetAccountStatementPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountStatementPagedCompleted(this, new GetAccountStatementPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountStatementExtendedPaged", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAccountStatementExtendedPaged(long accID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> startDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> endDate, int shadowLevel, string direction, int isBankCommission, int page, int rowsInPage) {
            object[] results = this.Invoke("GetAccountStatementExtendedPaged", new object[] {
                        accID,
                        startDate,
                        endDate,
                        shadowLevel,
                        direction,
                        isBankCommission,
                        page,
                        rowsInPage});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountStatementExtendedPagedAsync(long accID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int shadowLevel, string direction, int isBankCommission, int page, int rowsInPage) {
            this.GetAccountStatementExtendedPagedAsync(accID, startDate, endDate, shadowLevel, direction, isBankCommission, page, rowsInPage, null);
        }
        
        /// <remarks/>
        public void GetAccountStatementExtendedPagedAsync(long accID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, int shadowLevel, string direction, int isBankCommission, int page, int rowsInPage, object userState) {
            if ((this.GetAccountStatementExtendedPagedOperationCompleted == null)) {
                this.GetAccountStatementExtendedPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountStatementExtendedPagedOperationCompleted);
            }
            this.InvokeAsync("GetAccountStatementExtendedPaged", new object[] {
                        accID,
                        startDate,
                        endDate,
                        shadowLevel,
                        direction,
                        isBankCommission,
                        page,
                        rowsInPage}, this.GetAccountStatementExtendedPagedOperationCompleted, userState);
        }
        
        private void OnGetAccountStatementExtendedPagedOperationCompleted(object arg) {
            if ((this.GetAccountStatementExtendedPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountStatementExtendedPagedCompleted(this, new GetAccountStatementExtendedPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientStatementXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetClientStatementXml(int clientNo, System.DateTime startDate, System.DateTime endDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> accID, string accountIban, bool textInUtf) {
            object[] results = this.Invoke("GetClientStatementXml", new object[] {
                        clientNo,
                        startDate,
                        endDate,
                        accID,
                        accountIban,
                        textInUtf});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientStatementXmlAsync(int clientNo, System.DateTime startDate, System.DateTime endDate, System.Nullable<long> accID, string accountIban, bool textInUtf) {
            this.GetClientStatementXmlAsync(clientNo, startDate, endDate, accID, accountIban, textInUtf, null);
        }
        
        /// <remarks/>
        public void GetClientStatementXmlAsync(int clientNo, System.DateTime startDate, System.DateTime endDate, System.Nullable<long> accID, string accountIban, bool textInUtf, object userState) {
            if ((this.GetClientStatementXmlOperationCompleted == null)) {
                this.GetClientStatementXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientStatementXmlOperationCompleted);
            }
            this.InvokeAsync("GetClientStatementXml", new object[] {
                        clientNo,
                        startDate,
                        endDate,
                        accID,
                        accountIban,
                        textInUtf}, this.GetClientStatementXmlOperationCompleted, userState);
        }
        
        private void OnGetClientStatementXmlOperationCompleted(object arg) {
            if ((this.GetClientStatementXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientStatementXmlCompleted(this, new GetClientStatementXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientLastTransactions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientLastTransactions(long[] acc_ids, System.DateTime startDate, System.DateTime endDate, int shadowLevel, int page, int rowsInPage) {
            object[] results = this.Invoke("GetClientLastTransactions", new object[] {
                        acc_ids,
                        startDate,
                        endDate,
                        shadowLevel,
                        page,
                        rowsInPage});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientLastTransactionsAsync(long[] acc_ids, System.DateTime startDate, System.DateTime endDate, int shadowLevel, int page, int rowsInPage) {
            this.GetClientLastTransactionsAsync(acc_ids, startDate, endDate, shadowLevel, page, rowsInPage, null);
        }
        
        /// <remarks/>
        public void GetClientLastTransactionsAsync(long[] acc_ids, System.DateTime startDate, System.DateTime endDate, int shadowLevel, int page, int rowsInPage, object userState) {
            if ((this.GetClientLastTransactionsOperationCompleted == null)) {
                this.GetClientLastTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientLastTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetClientLastTransactions", new object[] {
                        acc_ids,
                        startDate,
                        endDate,
                        shadowLevel,
                        page,
                        rowsInPage}, this.GetClientLastTransactionsOperationCompleted, userState);
        }
        
        private void OnGetClientLastTransactionsOperationCompleted(object arg) {
            if ((this.GetClientLastTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientLastTransactionsCompleted(this, new GetClientLastTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountTurnover", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAccountTurnover(long accID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> startDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> endDate) {
            object[] results = this.Invoke("GetAccountTurnover", new object[] {
                        accID,
                        startDate,
                        endDate});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountTurnoverAsync(long accID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            this.GetAccountTurnoverAsync(accID, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetAccountTurnoverAsync(long accID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, object userState) {
            if ((this.GetAccountTurnoverOperationCompleted == null)) {
                this.GetAccountTurnoverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountTurnoverOperationCompleted);
            }
            this.InvokeAsync("GetAccountTurnover", new object[] {
                        accID,
                        startDate,
                        endDate}, this.GetAccountTurnoverOperationCompleted, userState);
        }
        
        private void OnGetAccountTurnoverOperationCompleted(object arg) {
            if ((this.GetAccountTurnoverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountTurnoverCompleted(this, new GetAccountTurnoverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBalAccTurnover", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetBalAccTurnover(string bal_acc_list, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetBalAccTurnover", new object[] {
                        bal_acc_list,
                        startDate,
                        endDate});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetBalAccTurnoverAsync(string bal_acc_list, System.DateTime startDate, System.DateTime endDate) {
            this.GetBalAccTurnoverAsync(bal_acc_list, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetBalAccTurnoverAsync(string bal_acc_list, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetBalAccTurnoverOperationCompleted == null)) {
                this.GetBalAccTurnoverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBalAccTurnoverOperationCompleted);
            }
            this.InvokeAsync("GetBalAccTurnover", new object[] {
                        bal_acc_list,
                        startDate,
                        endDate}, this.GetBalAccTurnoverOperationCompleted, userState);
        }
        
        private void OnGetBalAccTurnoverOperationCompleted(object arg) {
            if ((this.GetBalAccTurnoverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBalAccTurnoverCompleted(this, new GetBalAccTurnoverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountCreditOps", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAccountCreditOps(string acc_id, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetAccountCreditOps", new object[] {
                        acc_id,
                        startDate,
                        endDate});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountCreditOpsAsync(string acc_id, System.DateTime startDate, System.DateTime endDate) {
            this.GetAccountCreditOpsAsync(acc_id, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetAccountCreditOpsAsync(string acc_id, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetAccountCreditOpsOperationCompleted == null)) {
                this.GetAccountCreditOpsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountCreditOpsOperationCompleted);
            }
            this.InvokeAsync("GetAccountCreditOps", new object[] {
                        acc_id,
                        startDate,
                        endDate}, this.GetAccountCreditOpsOperationCompleted, userState);
        }
        
        private void OnGetAccountCreditOpsOperationCompleted(object arg) {
            if ((this.GetAccountCreditOpsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountCreditOpsCompleted(this, new GetAccountCreditOpsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccountAttributeAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer AccountAttributeAdd(long accID, string attribCode, string attribValue) {
            object[] results = this.Invoke("AccountAttributeAdd", new object[] {
                        accID,
                        attribCode,
                        attribValue});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void AccountAttributeAddAsync(long accID, string attribCode, string attribValue) {
            this.AccountAttributeAddAsync(accID, attribCode, attribValue, null);
        }
        
        /// <remarks/>
        public void AccountAttributeAddAsync(long accID, string attribCode, string attribValue, object userState) {
            if ((this.AccountAttributeAddOperationCompleted == null)) {
                this.AccountAttributeAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountAttributeAddOperationCompleted);
            }
            this.InvokeAsync("AccountAttributeAdd", new object[] {
                        accID,
                        attribCode,
                        attribValue}, this.AccountAttributeAddOperationCompleted, userState);
        }
        
        private void OnAccountAttributeAddOperationCompleted(object arg) {
            if ((this.AccountAttributeAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountAttributeAddCompleted(this, new AccountAttributeAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccountAttributeDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer AccountAttributeDelete(long accID, string attribCode) {
            object[] results = this.Invoke("AccountAttributeDelete", new object[] {
                        accID,
                        attribCode});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void AccountAttributeDeleteAsync(long accID, string attribCode) {
            this.AccountAttributeDeleteAsync(accID, attribCode, null);
        }
        
        /// <remarks/>
        public void AccountAttributeDeleteAsync(long accID, string attribCode, object userState) {
            if ((this.AccountAttributeDeleteOperationCompleted == null)) {
                this.AccountAttributeDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountAttributeDeleteOperationCompleted);
            }
            this.InvokeAsync("AccountAttributeDelete", new object[] {
                        accID,
                        attribCode}, this.AccountAttributeDeleteOperationCompleted, userState);
        }
        
        private void OnAccountAttributeDeleteOperationCompleted(object arg) {
            if ((this.AccountAttributeDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountAttributeDeleteCompleted(this, new AccountAttributeDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccountSetControl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer AccountSetControl(int accountId, string reason, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> responsible_user_id) {
            object[] results = this.Invoke("AccountSetControl", new object[] {
                        accountId,
                        reason,
                        responsible_user_id});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void AccountSetControlAsync(int accountId, string reason, System.Nullable<int> responsible_user_id) {
            this.AccountSetControlAsync(accountId, reason, responsible_user_id, null);
        }
        
        /// <remarks/>
        public void AccountSetControlAsync(int accountId, string reason, System.Nullable<int> responsible_user_id, object userState) {
            if ((this.AccountSetControlOperationCompleted == null)) {
                this.AccountSetControlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountSetControlOperationCompleted);
            }
            this.InvokeAsync("AccountSetControl", new object[] {
                        accountId,
                        reason,
                        responsible_user_id}, this.AccountSetControlOperationCompleted, userState);
        }
        
        private void OnAccountSetControlOperationCompleted(object arg) {
            if ((this.AccountSetControlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountSetControlCompleted(this, new AccountSetControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeposits", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetDeposits(int clientNo) {
            object[] results = this.Invoke("GetDeposits", new object[] {
                        clientNo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepositsAsync(int clientNo) {
            this.GetDepositsAsync(clientNo, null);
        }
        
        /// <remarks/>
        public void GetDepositsAsync(int clientNo, object userState) {
            if ((this.GetDepositsOperationCompleted == null)) {
                this.GetDepositsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepositsOperationCompleted);
            }
            this.InvokeAsync("GetDeposits", new object[] {
                        clientNo}, this.GetDepositsOperationCompleted, userState);
        }
        
        private void OnGetDepositsOperationCompleted(object arg) {
            if ((this.GetDepositsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepositsCompleted(this, new GetDepositsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeposit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetDeposit(string agreementNo) {
            object[] results = this.Invoke("GetDeposit", new object[] {
                        agreementNo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepositAsync(string agreementNo) {
            this.GetDepositAsync(agreementNo, null);
        }
        
        /// <remarks/>
        public void GetDepositAsync(string agreementNo, object userState) {
            if ((this.GetDepositOperationCompleted == null)) {
                this.GetDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepositOperationCompleted);
            }
            this.InvokeAsync("GetDeposit", new object[] {
                        agreementNo}, this.GetDepositOperationCompleted, userState);
        }
        
        private void OnGetDepositOperationCompleted(object arg) {
            if ((this.GetDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepositCompleted(this, new GetDepositCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepositAccrualGraph", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetDepositAccrualGraph(int depoAccId) {
            object[] results = this.Invoke("GetDepositAccrualGraph", new object[] {
                        depoAccId});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepositAccrualGraphAsync(int depoAccId) {
            this.GetDepositAccrualGraphAsync(depoAccId, null);
        }
        
        /// <remarks/>
        public void GetDepositAccrualGraphAsync(int depoAccId, object userState) {
            if ((this.GetDepositAccrualGraphOperationCompleted == null)) {
                this.GetDepositAccrualGraphOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepositAccrualGraphOperationCompleted);
            }
            this.InvokeAsync("GetDepositAccrualGraph", new object[] {
                        depoAccId}, this.GetDepositAccrualGraphOperationCompleted, userState);
        }
        
        private void OnGetDepositAccrualGraphOperationCompleted(object arg) {
            if ((this.GetDepositAccrualGraphCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepositAccrualGraphCompleted(this, new GetDepositAccrualGraphCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepositsEfectiveIntrate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetDepositsEfectiveIntrate(int depoAccID) {
            object[] results = this.Invoke("GetDepositsEfectiveIntrate", new object[] {
                        depoAccID});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepositsEfectiveIntrateAsync(int depoAccID) {
            this.GetDepositsEfectiveIntrateAsync(depoAccID, null);
        }
        
        /// <remarks/>
        public void GetDepositsEfectiveIntrateAsync(int depoAccID, object userState) {
            if ((this.GetDepositsEfectiveIntrateOperationCompleted == null)) {
                this.GetDepositsEfectiveIntrateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepositsEfectiveIntrateOperationCompleted);
            }
            this.InvokeAsync("GetDepositsEfectiveIntrate", new object[] {
                        depoAccID}, this.GetDepositsEfectiveIntrateOperationCompleted, userState);
        }
        
        private void OnGetDepositsEfectiveIntrateOperationCompleted(object arg) {
            if ((this.GetDepositsEfectiveIntrateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepositsEfectiveIntrateCompleted(this, new GetDepositsEfectiveIntrateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepositAccountOvernightAmount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetDepositAccountOvernightAmount(int AccID, System.DateTime EndDate) {
            object[] results = this.Invoke("GetDepositAccountOvernightAmount", new object[] {
                        AccID,
                        EndDate});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepositAccountOvernightAmountAsync(int AccID, System.DateTime EndDate) {
            this.GetDepositAccountOvernightAmountAsync(AccID, EndDate, null);
        }
        
        /// <remarks/>
        public void GetDepositAccountOvernightAmountAsync(int AccID, System.DateTime EndDate, object userState) {
            if ((this.GetDepositAccountOvernightAmountOperationCompleted == null)) {
                this.GetDepositAccountOvernightAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepositAccountOvernightAmountOperationCompleted);
            }
            this.InvokeAsync("GetDepositAccountOvernightAmount", new object[] {
                        AccID,
                        EndDate}, this.GetDepositAccountOvernightAmountOperationCompleted, userState);
        }
        
        private void OnGetDepositAccountOvernightAmountOperationCompleted(object arg) {
            if ((this.GetDepositAccountOvernightAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepositAccountOvernightAmountCompleted(this, new GetDepositAccountOvernightAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DepositAddAmount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer DepositAddAmount(int depoID, decimal amount, string iso) {
            object[] results = this.Invoke("DepositAddAmount", new object[] {
                        depoID,
                        amount,
                        iso});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void DepositAddAmountAsync(int depoID, decimal amount, string iso) {
            this.DepositAddAmountAsync(depoID, amount, iso, null);
        }
        
        /// <remarks/>
        public void DepositAddAmountAsync(int depoID, decimal amount, string iso, object userState) {
            if ((this.DepositAddAmountOperationCompleted == null)) {
                this.DepositAddAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepositAddAmountOperationCompleted);
            }
            this.InvokeAsync("DepositAddAmount", new object[] {
                        depoID,
                        amount,
                        iso}, this.DepositAddAmountOperationCompleted, userState);
        }
        
        private void OnDepositAddAmountOperationCompleted(object arg) {
            if ((this.DepositAddAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepositAddAmountCompleted(this, new DepositAddAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLoanRemaindAmounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetLoanRemaindAmounts(int clientNo) {
            object[] results = this.Invoke("GetLoanRemaindAmounts", new object[] {
                        clientNo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoanRemaindAmountsAsync(int clientNo) {
            this.GetLoanRemaindAmountsAsync(clientNo, null);
        }
        
        /// <remarks/>
        public void GetLoanRemaindAmountsAsync(int clientNo, object userState) {
            if ((this.GetLoanRemaindAmountsOperationCompleted == null)) {
                this.GetLoanRemaindAmountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoanRemaindAmountsOperationCompleted);
            }
            this.InvokeAsync("GetLoanRemaindAmounts", new object[] {
                        clientNo}, this.GetLoanRemaindAmountsOperationCompleted, userState);
        }
        
        private void OnGetLoanRemaindAmountsOperationCompleted(object arg) {
            if ((this.GetLoanRemaindAmountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoanRemaindAmountsCompleted(this, new GetLoanRemaindAmountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientHaveProblemLoan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientHaveProblemLoan(int clientNo) {
            object[] results = this.Invoke("GetClientHaveProblemLoan", new object[] {
                        clientNo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientHaveProblemLoanAsync(int clientNo) {
            this.GetClientHaveProblemLoanAsync(clientNo, null);
        }
        
        /// <remarks/>
        public void GetClientHaveProblemLoanAsync(int clientNo, object userState) {
            if ((this.GetClientHaveProblemLoanOperationCompleted == null)) {
                this.GetClientHaveProblemLoanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientHaveProblemLoanOperationCompleted);
            }
            this.InvokeAsync("GetClientHaveProblemLoan", new object[] {
                        clientNo}, this.GetClientHaveProblemLoanOperationCompleted, userState);
        }
        
        private void OnGetClientHaveProblemLoanOperationCompleted(object arg) {
            if ((this.GetClientHaveProblemLoanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientHaveProblemLoanCompleted(this, new GetClientHaveProblemLoanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCommisionDebt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetCommisionDebt(int clientNo) {
            object[] results = this.Invoke("GetCommisionDebt", new object[] {
                        clientNo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommisionDebtAsync(int clientNo) {
            this.GetCommisionDebtAsync(clientNo, null);
        }
        
        /// <remarks/>
        public void GetCommisionDebtAsync(int clientNo, object userState) {
            if ((this.GetCommisionDebtOperationCompleted == null)) {
                this.GetCommisionDebtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommisionDebtOperationCompleted);
            }
            this.InvokeAsync("GetCommisionDebt", new object[] {
                        clientNo}, this.GetCommisionDebtOperationCompleted, userState);
        }
        
        private void OnGetCommisionDebtOperationCompleted(object arg) {
            if ((this.GetCommisionDebtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommisionDebtCompleted(this, new GetCommisionDebtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientDebt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientDebt(int clientNo) {
            object[] results = this.Invoke("GetClientDebt", new object[] {
                        clientNo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientDebtAsync(int clientNo) {
            this.GetClientDebtAsync(clientNo, null);
        }
        
        /// <remarks/>
        public void GetClientDebtAsync(int clientNo, object userState) {
            if ((this.GetClientDebtOperationCompleted == null)) {
                this.GetClientDebtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientDebtOperationCompleted);
            }
            this.InvokeAsync("GetClientDebt", new object[] {
                        clientNo}, this.GetClientDebtOperationCompleted, userState);
        }
        
        private void OnGetClientDebtOperationCompleted(object arg) {
            if ((this.GetClientDebtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientDebtCompleted(this, new GetClientDebtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BankOpenDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer BankOpenDate() {
            object[] results = this.Invoke("BankOpenDate", new object[0]);
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void BankOpenDateAsync() {
            this.BankOpenDateAsync(null);
        }
        
        /// <remarks/>
        public void BankOpenDateAsync(object userState) {
            if ((this.BankOpenDateOperationCompleted == null)) {
                this.BankOpenDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankOpenDateOperationCompleted);
            }
            this.InvokeAsync("BankOpenDate", new object[0], this.BankOpenDateOperationCompleted, userState);
        }
        
        private void OnBankOpenDateOperationCompleted(object arg) {
            if ((this.BankOpenDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankOpenDateCompleted(this, new BankOpenDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TreasureInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer TreasureInfo(string treasure_code) {
            object[] results = this.Invoke("TreasureInfo", new object[] {
                        treasure_code});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void TreasureInfoAsync(string treasure_code) {
            this.TreasureInfoAsync(treasure_code, null);
        }
        
        /// <remarks/>
        public void TreasureInfoAsync(string treasure_code, object userState) {
            if ((this.TreasureInfoOperationCompleted == null)) {
                this.TreasureInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTreasureInfoOperationCompleted);
            }
            this.InvokeAsync("TreasureInfo", new object[] {
                        treasure_code}, this.TreasureInfoOperationCompleted, userState);
        }
        
        private void OnTreasureInfoOperationCompleted(object arg) {
            if ((this.TreasureInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TreasureInfoCompleted(this, new TreasureInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetRates([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> date, string iso) {
            object[] results = this.Invoke("GetRates", new object[] {
                        date,
                        iso});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetRatesAsync(System.Nullable<System.DateTime> date, string iso) {
            this.GetRatesAsync(date, iso, null);
        }
        
        /// <remarks/>
        public void GetRatesAsync(System.Nullable<System.DateTime> date, string iso, object userState) {
            if ((this.GetRatesOperationCompleted == null)) {
                this.GetRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRatesOperationCompleted);
            }
            this.InvokeAsync("GetRates", new object[] {
                        date,
                        iso}, this.GetRatesOperationCompleted, userState);
        }
        
        private void OnGetRatesOperationCompleted(object arg) {
            if ((this.GetRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRatesCompleted(this, new GetRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentRates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetCurrentRates(string iso) {
            object[] results = this.Invoke("GetCurrentRates", new object[] {
                        iso});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentRatesAsync(string iso) {
            this.GetCurrentRatesAsync(iso, null);
        }
        
        /// <remarks/>
        public void GetCurrentRatesAsync(string iso, object userState) {
            if ((this.GetCurrentRatesOperationCompleted == null)) {
                this.GetCurrentRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentRatesOperationCompleted);
            }
            this.InvokeAsync("GetCurrentRates", new object[] {
                        iso}, this.GetCurrentRatesOperationCompleted, userState);
        }
        
        private void OnGetCurrentRatesOperationCompleted(object arg) {
            if ((this.GetCurrentRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentRatesCompleted(this, new GetCurrentRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCrossRates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetCrossRates(string iso1, string iso2) {
            object[] results = this.Invoke("GetCrossRates", new object[] {
                        iso1,
                        iso2});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCrossRatesAsync(string iso1, string iso2) {
            this.GetCrossRatesAsync(iso1, iso2, null);
        }
        
        /// <remarks/>
        public void GetCrossRatesAsync(string iso1, string iso2, object userState) {
            if ((this.GetCrossRatesOperationCompleted == null)) {
                this.GetCrossRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCrossRatesOperationCompleted);
            }
            this.InvokeAsync("GetCrossRates", new object[] {
                        iso1,
                        iso2}, this.GetCrossRatesOperationCompleted, userState);
        }
        
        private void OnGetCrossRatesOperationCompleted(object arg) {
            if ((this.GetCrossRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCrossRatesCompleted(this, new GetCrossRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExchangeRates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetExchangeRates(System.DateTime start_date, System.DateTime end_date, string iso, bool is_salary) {
            object[] results = this.Invoke("GetExchangeRates", new object[] {
                        start_date,
                        end_date,
                        iso,
                        is_salary});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetExchangeRatesAsync(System.DateTime start_date, System.DateTime end_date, string iso, bool is_salary) {
            this.GetExchangeRatesAsync(start_date, end_date, iso, is_salary, null);
        }
        
        /// <remarks/>
        public void GetExchangeRatesAsync(System.DateTime start_date, System.DateTime end_date, string iso, bool is_salary, object userState) {
            if ((this.GetExchangeRatesOperationCompleted == null)) {
                this.GetExchangeRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExchangeRatesOperationCompleted);
            }
            this.InvokeAsync("GetExchangeRates", new object[] {
                        start_date,
                        end_date,
                        iso,
                        is_salary}, this.GetExchangeRatesOperationCompleted, userState);
        }
        
        private void OnGetExchangeRatesOperationCompleted(object arg) {
            if ((this.GetExchangeRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExchangeRatesCompleted(this, new GetExchangeRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRatesHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetRatesHistory(System.DateTime start_date, System.DateTime end_date, string iso) {
            object[] results = this.Invoke("GetRatesHistory", new object[] {
                        start_date,
                        end_date,
                        iso});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetRatesHistoryAsync(System.DateTime start_date, System.DateTime end_date, string iso) {
            this.GetRatesHistoryAsync(start_date, end_date, iso, null);
        }
        
        /// <remarks/>
        public void GetRatesHistoryAsync(System.DateTime start_date, System.DateTime end_date, string iso, object userState) {
            if ((this.GetRatesHistoryOperationCompleted == null)) {
                this.GetRatesHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRatesHistoryOperationCompleted);
            }
            this.InvokeAsync("GetRatesHistory", new object[] {
                        start_date,
                        end_date,
                        iso}, this.GetRatesHistoryOperationCompleted, userState);
        }
        
        private void OnGetRatesHistoryOperationCompleted(object arg) {
            if ((this.GetRatesHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRatesHistoryCompleted(this, new GetRatesHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCrossRatesKas", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetCrossRatesKas(string iso1, string iso2) {
            object[] results = this.Invoke("GetCrossRatesKas", new object[] {
                        iso1,
                        iso2});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCrossRatesKasAsync(string iso1, string iso2) {
            this.GetCrossRatesKasAsync(iso1, iso2, null);
        }
        
        /// <remarks/>
        public void GetCrossRatesKasAsync(string iso1, string iso2, object userState) {
            if ((this.GetCrossRatesKasOperationCompleted == null)) {
                this.GetCrossRatesKasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCrossRatesKasOperationCompleted);
            }
            this.InvokeAsync("GetCrossRatesKas", new object[] {
                        iso1,
                        iso2}, this.GetCrossRatesKasOperationCompleted, userState);
        }
        
        private void OnGetCrossRatesKasOperationCompleted(object arg) {
            if ((this.GetCrossRatesKasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCrossRatesKasCompleted(this, new GetCrossRatesKasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBanks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetBanks(bool onlyVTB, bool includeClosedBanks) {
            object[] results = this.Invoke("GetBanks", new object[] {
                        onlyVTB,
                        includeClosedBanks});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetBanksAsync(bool onlyVTB, bool includeClosedBanks) {
            this.GetBanksAsync(onlyVTB, includeClosedBanks, null);
        }
        
        /// <remarks/>
        public void GetBanksAsync(bool onlyVTB, bool includeClosedBanks, object userState) {
            if ((this.GetBanksOperationCompleted == null)) {
                this.GetBanksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBanksOperationCompleted);
            }
            this.InvokeAsync("GetBanks", new object[] {
                        onlyVTB,
                        includeClosedBanks}, this.GetBanksOperationCompleted, userState);
        }
        
        private void OnGetBanksOperationCompleted(object arg) {
            if ((this.GetBanksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBanksCompleted(this, new GetBanksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCodesForRub", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetCodesForRub() {
            object[] results = this.Invoke("GetCodesForRub", new object[0]);
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCodesForRubAsync() {
            this.GetCodesForRubAsync(null);
        }
        
        /// <remarks/>
        public void GetCodesForRubAsync(object userState) {
            if ((this.GetCodesForRubOperationCompleted == null)) {
                this.GetCodesForRubOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCodesForRubOperationCompleted);
            }
            this.InvokeAsync("GetCodesForRub", new object[0], this.GetCodesForRubOperationCompleted, userState);
        }
        
        private void OnGetCodesForRubOperationCompleted(object arg) {
            if ((this.GetCodesForRubCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCodesForRubCompleted(this, new GetCodesForRubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetBank(string bic) {
            object[] results = this.Invoke("GetBank", new object[] {
                        bic});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetBankAsync(string bic) {
            this.GetBankAsync(bic, null);
        }
        
        /// <remarks/>
        public void GetBankAsync(string bic, object userState) {
            if ((this.GetBankOperationCompleted == null)) {
                this.GetBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankOperationCompleted);
            }
            this.InvokeAsync("GetBank", new object[] {
                        bic}, this.GetBankOperationCompleted, userState);
        }
        
        private void OnGetBankOperationCompleted(object arg) {
            if ((this.GetBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankCompleted(this, new GetBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForeignBanks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetForeignBanks(string country, string city, string descrip, bool includeClosedBanks) {
            object[] results = this.Invoke("GetForeignBanks", new object[] {
                        country,
                        city,
                        descrip,
                        includeClosedBanks});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetForeignBanksAsync(string country, string city, string descrip, bool includeClosedBanks) {
            this.GetForeignBanksAsync(country, city, descrip, includeClosedBanks, null);
        }
        
        /// <remarks/>
        public void GetForeignBanksAsync(string country, string city, string descrip, bool includeClosedBanks, object userState) {
            if ((this.GetForeignBanksOperationCompleted == null)) {
                this.GetForeignBanksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForeignBanksOperationCompleted);
            }
            this.InvokeAsync("GetForeignBanks", new object[] {
                        country,
                        city,
                        descrip,
                        includeClosedBanks}, this.GetForeignBanksOperationCompleted, userState);
        }
        
        private void OnGetForeignBanksOperationCompleted(object arg) {
            if ((this.GetForeignBanksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForeignBanksCompleted(this, new GetForeignBanksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetCountries(string country, string descrip) {
            object[] results = this.Invoke("GetCountries", new object[] {
                        country,
                        descrip});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountriesAsync(string country, string descrip) {
            this.GetCountriesAsync(country, descrip, null);
        }
        
        /// <remarks/>
        public void GetCountriesAsync(string country, string descrip, object userState) {
            if ((this.GetCountriesOperationCompleted == null)) {
                this.GetCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountriesOperationCompleted);
            }
            this.InvokeAsync("GetCountries", new object[] {
                        country,
                        descrip}, this.GetCountriesOperationCompleted, userState);
        }
        
        private void OnGetCountriesOperationCompleted(object arg) {
            if ((this.GetCountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountriesCompleted(this, new GetCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDepts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetDepts() {
            object[] results = this.Invoke("GetDepts", new object[0]);
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeptsAsync() {
            this.GetDeptsAsync(null);
        }
        
        /// <remarks/>
        public void GetDeptsAsync(object userState) {
            if ((this.GetDeptsOperationCompleted == null)) {
                this.GetDeptsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeptsOperationCompleted);
            }
            this.InvokeAsync("GetDepts", new object[0], this.GetDeptsOperationCompleted, userState);
        }
        
        private void OnGetDeptsOperationCompleted(object arg) {
            if ((this.GetDeptsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeptsCompleted(this, new GetDeptsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetUsers() {
            object[] results = this.Invoke("GetUsers", new object[0]);
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersAsync() {
            this.GetUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[0], this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientReopen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer ClientReopen(int client_no, int user_id) {
            object[] results = this.Invoke("ClientReopen", new object[] {
                        client_no,
                        user_id});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void ClientReopenAsync(int client_no, int user_id) {
            this.ClientReopenAsync(client_no, user_id, null);
        }
        
        /// <remarks/>
        public void ClientReopenAsync(int client_no, int user_id, object userState) {
            if ((this.ClientReopenOperationCompleted == null)) {
                this.ClientReopenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientReopenOperationCompleted);
            }
            this.InvokeAsync("ClientReopen", new object[] {
                        client_no,
                        user_id}, this.ClientReopenOperationCompleted, userState);
        }
        
        private void OnClientReopenOperationCompleted(object arg) {
            if ((this.ClientReopenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientReopenCompleted(this, new ClientReopenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer AddClient(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> user_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> dept_no, 
                    int client_type, 
                    int client_subtype, 
                    int client_subtype2, 
                    int rec_state, 
                    int completed, 
                    int responsible_user_id, 
                    int client_type_bank, 
                    string descrip, 
                    string descrip_lat, 
                    System.DateTime client_reg_date, 
                    int is_resident, 
                    int is_insider, 
                    string country, 
                    string first_name, 
                    string last_name, 
                    string first_name_lat, 
                    string last_name_lat, 
                    string fathers_name, 
                    string fathers_name_lat, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> male_female, 
                    string tax_insp_city, 
                    string tax_insp_code, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> passport_type_id, 
                    string passport_country, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> passport_issue_dt, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> passport_end_date, 
                    string passport, 
                    string passport_reg_organ, 
                    string personal_id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> passport_needed, 
                    string phone_pin, 
                    string comment, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> rate_diff_type, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> rate_tariff_always_in_gel, 
                    string city, 
                    string sms_mobile_phone, 
                    string phone1, 
                    string phone2, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> birth_date, 
                    string birth_place, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> marital_status, 
                    string org_type, 
                    string reg_num, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> reg_date, 
                    string reg_organ, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> segment, 
                    string city_lat, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> is_employee, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> is_in_black_list, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> is_control, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> loan_limit_amount, 
                    string loan_limit_iso, 
                    int is_authorized, 
                    int need_rs) {
            object[] results = this.Invoke("AddClient", new object[] {
                        user_id,
                        dept_no,
                        client_type,
                        client_subtype,
                        client_subtype2,
                        rec_state,
                        completed,
                        responsible_user_id,
                        client_type_bank,
                        descrip,
                        descrip_lat,
                        client_reg_date,
                        is_resident,
                        is_insider,
                        country,
                        first_name,
                        last_name,
                        first_name_lat,
                        last_name_lat,
                        fathers_name,
                        fathers_name_lat,
                        male_female,
                        tax_insp_city,
                        tax_insp_code,
                        passport_type_id,
                        passport_country,
                        passport_issue_dt,
                        passport_end_date,
                        passport,
                        passport_reg_organ,
                        personal_id,
                        passport_needed,
                        phone_pin,
                        comment,
                        rate_diff_type,
                        rate_tariff_always_in_gel,
                        city,
                        sms_mobile_phone,
                        phone1,
                        phone2,
                        birth_date,
                        birth_place,
                        marital_status,
                        org_type,
                        reg_num,
                        reg_date,
                        reg_organ,
                        segment,
                        city_lat,
                        is_employee,
                        is_in_black_list,
                        is_control,
                        loan_limit_amount,
                        loan_limit_iso,
                        is_authorized,
                        need_rs});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void AddClientAsync(
                    System.Nullable<int> user_id, 
                    System.Nullable<int> dept_no, 
                    int client_type, 
                    int client_subtype, 
                    int client_subtype2, 
                    int rec_state, 
                    int completed, 
                    int responsible_user_id, 
                    int client_type_bank, 
                    string descrip, 
                    string descrip_lat, 
                    System.DateTime client_reg_date, 
                    int is_resident, 
                    int is_insider, 
                    string country, 
                    string first_name, 
                    string last_name, 
                    string first_name_lat, 
                    string last_name_lat, 
                    string fathers_name, 
                    string fathers_name_lat, 
                    System.Nullable<int> male_female, 
                    string tax_insp_city, 
                    string tax_insp_code, 
                    System.Nullable<int> passport_type_id, 
                    string passport_country, 
                    System.Nullable<System.DateTime> passport_issue_dt, 
                    System.Nullable<System.DateTime> passport_end_date, 
                    string passport, 
                    string passport_reg_organ, 
                    string personal_id, 
                    System.Nullable<int> passport_needed, 
                    string phone_pin, 
                    string comment, 
                    System.Nullable<int> rate_diff_type, 
                    System.Nullable<int> rate_tariff_always_in_gel, 
                    string city, 
                    string sms_mobile_phone, 
                    string phone1, 
                    string phone2, 
                    System.Nullable<System.DateTime> birth_date, 
                    string birth_place, 
                    System.Nullable<int> marital_status, 
                    string org_type, 
                    string reg_num, 
                    System.Nullable<System.DateTime> reg_date, 
                    string reg_organ, 
                    System.Nullable<int> segment, 
                    string city_lat, 
                    System.Nullable<int> is_employee, 
                    System.Nullable<int> is_in_black_list, 
                    System.Nullable<int> is_control, 
                    System.Nullable<decimal> loan_limit_amount, 
                    string loan_limit_iso, 
                    int is_authorized, 
                    int need_rs) {
            this.AddClientAsync(user_id, dept_no, client_type, client_subtype, client_subtype2, rec_state, completed, responsible_user_id, client_type_bank, descrip, descrip_lat, client_reg_date, is_resident, is_insider, country, first_name, last_name, first_name_lat, last_name_lat, fathers_name, fathers_name_lat, male_female, tax_insp_city, tax_insp_code, passport_type_id, passport_country, passport_issue_dt, passport_end_date, passport, passport_reg_organ, personal_id, passport_needed, phone_pin, comment, rate_diff_type, rate_tariff_always_in_gel, city, sms_mobile_phone, phone1, phone2, birth_date, birth_place, marital_status, org_type, reg_num, reg_date, reg_organ, segment, city_lat, is_employee, is_in_black_list, is_control, loan_limit_amount, loan_limit_iso, is_authorized, need_rs, null);
        }
        
        /// <remarks/>
        public void AddClientAsync(
                    System.Nullable<int> user_id, 
                    System.Nullable<int> dept_no, 
                    int client_type, 
                    int client_subtype, 
                    int client_subtype2, 
                    int rec_state, 
                    int completed, 
                    int responsible_user_id, 
                    int client_type_bank, 
                    string descrip, 
                    string descrip_lat, 
                    System.DateTime client_reg_date, 
                    int is_resident, 
                    int is_insider, 
                    string country, 
                    string first_name, 
                    string last_name, 
                    string first_name_lat, 
                    string last_name_lat, 
                    string fathers_name, 
                    string fathers_name_lat, 
                    System.Nullable<int> male_female, 
                    string tax_insp_city, 
                    string tax_insp_code, 
                    System.Nullable<int> passport_type_id, 
                    string passport_country, 
                    System.Nullable<System.DateTime> passport_issue_dt, 
                    System.Nullable<System.DateTime> passport_end_date, 
                    string passport, 
                    string passport_reg_organ, 
                    string personal_id, 
                    System.Nullable<int> passport_needed, 
                    string phone_pin, 
                    string comment, 
                    System.Nullable<int> rate_diff_type, 
                    System.Nullable<int> rate_tariff_always_in_gel, 
                    string city, 
                    string sms_mobile_phone, 
                    string phone1, 
                    string phone2, 
                    System.Nullable<System.DateTime> birth_date, 
                    string birth_place, 
                    System.Nullable<int> marital_status, 
                    string org_type, 
                    string reg_num, 
                    System.Nullable<System.DateTime> reg_date, 
                    string reg_organ, 
                    System.Nullable<int> segment, 
                    string city_lat, 
                    System.Nullable<int> is_employee, 
                    System.Nullable<int> is_in_black_list, 
                    System.Nullable<int> is_control, 
                    System.Nullable<decimal> loan_limit_amount, 
                    string loan_limit_iso, 
                    int is_authorized, 
                    int need_rs, 
                    object userState) {
            if ((this.AddClientOperationCompleted == null)) {
                this.AddClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddClientOperationCompleted);
            }
            this.InvokeAsync("AddClient", new object[] {
                        user_id,
                        dept_no,
                        client_type,
                        client_subtype,
                        client_subtype2,
                        rec_state,
                        completed,
                        responsible_user_id,
                        client_type_bank,
                        descrip,
                        descrip_lat,
                        client_reg_date,
                        is_resident,
                        is_insider,
                        country,
                        first_name,
                        last_name,
                        first_name_lat,
                        last_name_lat,
                        fathers_name,
                        fathers_name_lat,
                        male_female,
                        tax_insp_city,
                        tax_insp_code,
                        passport_type_id,
                        passport_country,
                        passport_issue_dt,
                        passport_end_date,
                        passport,
                        passport_reg_organ,
                        personal_id,
                        passport_needed,
                        phone_pin,
                        comment,
                        rate_diff_type,
                        rate_tariff_always_in_gel,
                        city,
                        sms_mobile_phone,
                        phone1,
                        phone2,
                        birth_date,
                        birth_place,
                        marital_status,
                        org_type,
                        reg_num,
                        reg_date,
                        reg_organ,
                        segment,
                        city_lat,
                        is_employee,
                        is_in_black_list,
                        is_control,
                        loan_limit_amount,
                        loan_limit_iso,
                        is_authorized,
                        need_rs}, this.AddClientOperationCompleted, userState);
        }
        
        private void OnAddClientOperationCompleted(object arg) {
            if ((this.AddClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddClientCompleted(this, new AddClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddClientMinimal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer AddClientMinimal(
                    int user_id, 
                    int is_resident, 
                    string country, 
                    string first_name, 
                    string last_name, 
                    string fathers_name, 
                    int male_female, 
                    int passport_type_id, 
                    string passport_country, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> passport_issue_dt, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> passport_end_date, 
                    string passport, 
                    string passport_reg_organ, 
                    string personal_id, 
                    string city, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> birth_date, 
                    string birth_place, 
                    string address_legal, 
                    string address_fact, 
                    int client_subtype) {
            object[] results = this.Invoke("AddClientMinimal", new object[] {
                        user_id,
                        is_resident,
                        country,
                        first_name,
                        last_name,
                        fathers_name,
                        male_female,
                        passport_type_id,
                        passport_country,
                        passport_issue_dt,
                        passport_end_date,
                        passport,
                        passport_reg_organ,
                        personal_id,
                        city,
                        birth_date,
                        birth_place,
                        address_legal,
                        address_fact,
                        client_subtype});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void AddClientMinimalAsync(
                    int user_id, 
                    int is_resident, 
                    string country, 
                    string first_name, 
                    string last_name, 
                    string fathers_name, 
                    int male_female, 
                    int passport_type_id, 
                    string passport_country, 
                    System.Nullable<System.DateTime> passport_issue_dt, 
                    System.Nullable<System.DateTime> passport_end_date, 
                    string passport, 
                    string passport_reg_organ, 
                    string personal_id, 
                    string city, 
                    System.Nullable<System.DateTime> birth_date, 
                    string birth_place, 
                    string address_legal, 
                    string address_fact, 
                    int client_subtype) {
            this.AddClientMinimalAsync(user_id, is_resident, country, first_name, last_name, fathers_name, male_female, passport_type_id, passport_country, passport_issue_dt, passport_end_date, passport, passport_reg_organ, personal_id, city, birth_date, birth_place, address_legal, address_fact, client_subtype, null);
        }
        
        /// <remarks/>
        public void AddClientMinimalAsync(
                    int user_id, 
                    int is_resident, 
                    string country, 
                    string first_name, 
                    string last_name, 
                    string fathers_name, 
                    int male_female, 
                    int passport_type_id, 
                    string passport_country, 
                    System.Nullable<System.DateTime> passport_issue_dt, 
                    System.Nullable<System.DateTime> passport_end_date, 
                    string passport, 
                    string passport_reg_organ, 
                    string personal_id, 
                    string city, 
                    System.Nullable<System.DateTime> birth_date, 
                    string birth_place, 
                    string address_legal, 
                    string address_fact, 
                    int client_subtype, 
                    object userState) {
            if ((this.AddClientMinimalOperationCompleted == null)) {
                this.AddClientMinimalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddClientMinimalOperationCompleted);
            }
            this.InvokeAsync("AddClientMinimal", new object[] {
                        user_id,
                        is_resident,
                        country,
                        first_name,
                        last_name,
                        fathers_name,
                        male_female,
                        passport_type_id,
                        passport_country,
                        passport_issue_dt,
                        passport_end_date,
                        passport,
                        passport_reg_organ,
                        personal_id,
                        city,
                        birth_date,
                        birth_place,
                        address_legal,
                        address_fact,
                        client_subtype}, this.AddClientMinimalOperationCompleted, userState);
        }
        
        private void OnAddClientMinimalOperationCompleted(object arg) {
            if ((this.AddClientMinimalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddClientMinimalCompleted(this, new AddClientMinimalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientAttributeAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer ClientAttributeAdd(long clientNo, string attribCode, string attribValue) {
            object[] results = this.Invoke("ClientAttributeAdd", new object[] {
                        clientNo,
                        attribCode,
                        attribValue});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void ClientAttributeAddAsync(long clientNo, string attribCode, string attribValue) {
            this.ClientAttributeAddAsync(clientNo, attribCode, attribValue, null);
        }
        
        /// <remarks/>
        public void ClientAttributeAddAsync(long clientNo, string attribCode, string attribValue, object userState) {
            if ((this.ClientAttributeAddOperationCompleted == null)) {
                this.ClientAttributeAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientAttributeAddOperationCompleted);
            }
            this.InvokeAsync("ClientAttributeAdd", new object[] {
                        clientNo,
                        attribCode,
                        attribValue}, this.ClientAttributeAddOperationCompleted, userState);
        }
        
        private void OnClientAttributeAddOperationCompleted(object arg) {
            if ((this.ClientAttributeAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientAttributeAddCompleted(this, new ClientAttributeAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientAttributeDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer ClientAttributeDelete(long clientNo, string attribCode) {
            object[] results = this.Invoke("ClientAttributeDelete", new object[] {
                        clientNo,
                        attribCode});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void ClientAttributeDeleteAsync(long clientNo, string attribCode) {
            this.ClientAttributeDeleteAsync(clientNo, attribCode, null);
        }
        
        /// <remarks/>
        public void ClientAttributeDeleteAsync(long clientNo, string attribCode, object userState) {
            if ((this.ClientAttributeDeleteOperationCompleted == null)) {
                this.ClientAttributeDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientAttributeDeleteOperationCompleted);
            }
            this.InvokeAsync("ClientAttributeDelete", new object[] {
                        clientNo,
                        attribCode}, this.ClientAttributeDeleteOperationCompleted, userState);
        }
        
        private void OnClientAttributeDeleteOperationCompleted(object arg) {
            if ((this.ClientAttributeDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientAttributeDeleteCompleted(this, new ClientAttributeDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientExtensionsAddMinimal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer ClientExtensionsAddMinimal(long clientNo, int client_category, string client_clasiff, string client_job_place, string client_job_title, string monthly_income, string profession, string work_sphere) {
            object[] results = this.Invoke("ClientExtensionsAddMinimal", new object[] {
                        clientNo,
                        client_category,
                        client_clasiff,
                        client_job_place,
                        client_job_title,
                        monthly_income,
                        profession,
                        work_sphere});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void ClientExtensionsAddMinimalAsync(long clientNo, int client_category, string client_clasiff, string client_job_place, string client_job_title, string monthly_income, string profession, string work_sphere) {
            this.ClientExtensionsAddMinimalAsync(clientNo, client_category, client_clasiff, client_job_place, client_job_title, monthly_income, profession, work_sphere, null);
        }
        
        /// <remarks/>
        public void ClientExtensionsAddMinimalAsync(long clientNo, int client_category, string client_clasiff, string client_job_place, string client_job_title, string monthly_income, string profession, string work_sphere, object userState) {
            if ((this.ClientExtensionsAddMinimalOperationCompleted == null)) {
                this.ClientExtensionsAddMinimalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientExtensionsAddMinimalOperationCompleted);
            }
            this.InvokeAsync("ClientExtensionsAddMinimal", new object[] {
                        clientNo,
                        client_category,
                        client_clasiff,
                        client_job_place,
                        client_job_title,
                        monthly_income,
                        profession,
                        work_sphere}, this.ClientExtensionsAddMinimalOperationCompleted, userState);
        }
        
        private void OnClientExtensionsAddMinimalOperationCompleted(object arg) {
            if ((this.ClientExtensionsAddMinimalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientExtensionsAddMinimalCompleted(this, new ClientExtensionsAddMinimalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientInfo(int clientNo) {
            object[] results = this.Invoke("GetClientInfo", new object[] {
                        clientNo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientInfoAsync(int clientNo) {
            this.GetClientInfoAsync(clientNo, null);
        }
        
        /// <remarks/>
        public void GetClientInfoAsync(int clientNo, object userState) {
            if ((this.GetClientInfoOperationCompleted == null)) {
                this.GetClientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientInfoOperationCompleted);
            }
            this.InvokeAsync("GetClientInfo", new object[] {
                        clientNo}, this.GetClientInfoOperationCompleted, userState);
        }
        
        private void OnGetClientInfoOperationCompleted(object arg) {
            if ((this.GetClientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientInfoCompleted(this, new GetClientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientInfoEmployer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientInfoEmployer(string personal_id) {
            object[] results = this.Invoke("GetClientInfoEmployer", new object[] {
                        personal_id});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientInfoEmployerAsync(string personal_id) {
            this.GetClientInfoEmployerAsync(personal_id, null);
        }
        
        /// <remarks/>
        public void GetClientInfoEmployerAsync(string personal_id, object userState) {
            if ((this.GetClientInfoEmployerOperationCompleted == null)) {
                this.GetClientInfoEmployerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientInfoEmployerOperationCompleted);
            }
            this.InvokeAsync("GetClientInfoEmployer", new object[] {
                        personal_id}, this.GetClientInfoEmployerOperationCompleted, userState);
        }
        
        private void OnGetClientInfoEmployerOperationCompleted(object arg) {
            if ((this.GetClientInfoEmployerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientInfoEmployerCompleted(this, new GetClientInfoEmployerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientInfoByPID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientInfoByPID(string pid) {
            object[] results = this.Invoke("GetClientInfoByPID", new object[] {
                        pid});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientInfoByPIDAsync(string pid) {
            this.GetClientInfoByPIDAsync(pid, null);
        }
        
        /// <remarks/>
        public void GetClientInfoByPIDAsync(string pid, object userState) {
            if ((this.GetClientInfoByPIDOperationCompleted == null)) {
                this.GetClientInfoByPIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientInfoByPIDOperationCompleted);
            }
            this.InvokeAsync("GetClientInfoByPID", new object[] {
                        pid}, this.GetClientInfoByPIDOperationCompleted, userState);
        }
        
        private void OnGetClientInfoByPIDOperationCompleted(object arg) {
            if ((this.GetClientInfoByPIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientInfoByPIDCompleted(this, new GetClientInfoByPIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientInfoFatcaByPID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientInfoFatcaByPID(string pid) {
            object[] results = this.Invoke("GetClientInfoFatcaByPID", new object[] {
                        pid});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientInfoFatcaByPIDAsync(string pid) {
            this.GetClientInfoFatcaByPIDAsync(pid, null);
        }
        
        /// <remarks/>
        public void GetClientInfoFatcaByPIDAsync(string pid, object userState) {
            if ((this.GetClientInfoFatcaByPIDOperationCompleted == null)) {
                this.GetClientInfoFatcaByPIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientInfoFatcaByPIDOperationCompleted);
            }
            this.InvokeAsync("GetClientInfoFatcaByPID", new object[] {
                        pid}, this.GetClientInfoFatcaByPIDOperationCompleted, userState);
        }
        
        private void OnGetClientInfoFatcaByPIDOperationCompleted(object arg) {
            if ((this.GetClientInfoFatcaByPIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientInfoFatcaByPIDCompleted(this, new GetClientInfoFatcaByPIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientConsolidatedStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientConsolidatedStatement(int clientNo, System.DateTime EndDate, string language) {
            object[] results = this.Invoke("GetClientConsolidatedStatement", new object[] {
                        clientNo,
                        EndDate,
                        language});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientConsolidatedStatementAsync(int clientNo, System.DateTime EndDate, string language) {
            this.GetClientConsolidatedStatementAsync(clientNo, EndDate, language, null);
        }
        
        /// <remarks/>
        public void GetClientConsolidatedStatementAsync(int clientNo, System.DateTime EndDate, string language, object userState) {
            if ((this.GetClientConsolidatedStatementOperationCompleted == null)) {
                this.GetClientConsolidatedStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientConsolidatedStatementOperationCompleted);
            }
            this.InvokeAsync("GetClientConsolidatedStatement", new object[] {
                        clientNo,
                        EndDate,
                        language}, this.GetClientConsolidatedStatementOperationCompleted, userState);
        }
        
        private void OnGetClientConsolidatedStatementOperationCompleted(object arg) {
            if ((this.GetClientConsolidatedStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientConsolidatedStatementCompleted(this, new GetClientConsolidatedStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientIncasso", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientIncasso(int clientNo) {
            object[] results = this.Invoke("GetClientIncasso", new object[] {
                        clientNo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientIncassoAsync(int clientNo) {
            this.GetClientIncassoAsync(clientNo, null);
        }
        
        /// <remarks/>
        public void GetClientIncassoAsync(int clientNo, object userState) {
            if ((this.GetClientIncassoOperationCompleted == null)) {
                this.GetClientIncassoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientIncassoOperationCompleted);
            }
            this.InvokeAsync("GetClientIncasso", new object[] {
                        clientNo}, this.GetClientIncassoOperationCompleted, userState);
        }
        
        private void OnGetClientIncassoOperationCompleted(object arg) {
            if ((this.GetClientIncassoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientIncassoCompleted(this, new GetClientIncassoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientSequestration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientSequestration(int clientNo) {
            object[] results = this.Invoke("GetClientSequestration", new object[] {
                        clientNo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientSequestrationAsync(int clientNo) {
            this.GetClientSequestrationAsync(clientNo, null);
        }
        
        /// <remarks/>
        public void GetClientSequestrationAsync(int clientNo, object userState) {
            if ((this.GetClientSequestrationOperationCompleted == null)) {
                this.GetClientSequestrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientSequestrationOperationCompleted);
            }
            this.InvokeAsync("GetClientSequestration", new object[] {
                        clientNo}, this.GetClientSequestrationOperationCompleted, userState);
        }
        
        private void OnGetClientSequestrationOperationCompleted(object arg) {
            if ((this.GetClientSequestrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientSequestrationCompleted(this, new GetClientSequestrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelatedClients", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetRelatedClients(int clientNo) {
            object[] results = this.Invoke("GetRelatedClients", new object[] {
                        clientNo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelatedClientsAsync(int clientNo) {
            this.GetRelatedClientsAsync(clientNo, null);
        }
        
        /// <remarks/>
        public void GetRelatedClientsAsync(int clientNo, object userState) {
            if ((this.GetRelatedClientsOperationCompleted == null)) {
                this.GetRelatedClientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelatedClientsOperationCompleted);
            }
            this.InvokeAsync("GetRelatedClients", new object[] {
                        clientNo}, this.GetRelatedClientsOperationCompleted, userState);
        }
        
        private void OnGetRelatedClientsOperationCompleted(object arg) {
            if ((this.GetRelatedClientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelatedClientsCompleted(this, new GetRelatedClientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientCards", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientCards(int clientNo) {
            object[] results = this.Invoke("GetClientCards", new object[] {
                        clientNo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientCardsAsync(int clientNo) {
            this.GetClientCardsAsync(clientNo, null);
        }
        
        /// <remarks/>
        public void GetClientCardsAsync(int clientNo, object userState) {
            if ((this.GetClientCardsOperationCompleted == null)) {
                this.GetClientCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientCardsOperationCompleted);
            }
            this.InvokeAsync("GetClientCards", new object[] {
                        clientNo}, this.GetClientCardsOperationCompleted, userState);
        }
        
        private void OnGetClientCardsOperationCompleted(object arg) {
            if ((this.GetClientCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientCardsCompleted(this, new GetClientCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountCards", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetAccountCards(int accId) {
            object[] results = this.Invoke("GetAccountCards", new object[] {
                        accId});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountCardsAsync(int accId) {
            this.GetAccountCardsAsync(accId, null);
        }
        
        /// <remarks/>
        public void GetAccountCardsAsync(int accId, object userState) {
            if ((this.GetAccountCardsOperationCompleted == null)) {
                this.GetAccountCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountCardsOperationCompleted);
            }
            this.InvokeAsync("GetAccountCards", new object[] {
                        accId}, this.GetAccountCardsOperationCompleted, userState);
        }
        
        private void OnGetAccountCardsOperationCompleted(object arg) {
            if ((this.GetAccountCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountCardsCompleted(this, new GetAccountCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientAccounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientAccounts(int clientNo) {
            object[] results = this.Invoke("GetClientAccounts", new object[] {
                        clientNo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientAccountsAsync(int clientNo) {
            this.GetClientAccountsAsync(clientNo, null);
        }
        
        /// <remarks/>
        public void GetClientAccountsAsync(int clientNo, object userState) {
            if ((this.GetClientAccountsOperationCompleted == null)) {
                this.GetClientAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientAccountsOperationCompleted);
            }
            this.InvokeAsync("GetClientAccounts", new object[] {
                        clientNo}, this.GetClientAccountsOperationCompleted, userState);
        }
        
        private void OnGetClientAccountsOperationCompleted(object arg) {
            if ((this.GetClientAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientAccountsCompleted(this, new GetClientAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientAccountsD8", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientAccountsD8(int clientNo, int AccId, short[] AccTypes) {
            object[] results = this.Invoke("GetClientAccountsD8", new object[] {
                        clientNo,
                        AccId,
                        AccTypes});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientAccountsD8Async(int clientNo, int AccId, short[] AccTypes) {
            this.GetClientAccountsD8Async(clientNo, AccId, AccTypes, null);
        }
        
        /// <remarks/>
        public void GetClientAccountsD8Async(int clientNo, int AccId, short[] AccTypes, object userState) {
            if ((this.GetClientAccountsD8OperationCompleted == null)) {
                this.GetClientAccountsD8OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientAccountsD8OperationCompleted);
            }
            this.InvokeAsync("GetClientAccountsD8", new object[] {
                        clientNo,
                        AccId,
                        AccTypes}, this.GetClientAccountsD8OperationCompleted, userState);
        }
        
        private void OnGetClientAccountsD8OperationCompleted(object arg) {
            if ((this.GetClientAccountsD8Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientAccountsD8Completed(this, new GetClientAccountsD8CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientInternetAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientInternetAccount(int clientNo) {
            object[] results = this.Invoke("GetClientInternetAccount", new object[] {
                        clientNo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientInternetAccountAsync(int clientNo) {
            this.GetClientInternetAccountAsync(clientNo, null);
        }
        
        /// <remarks/>
        public void GetClientInternetAccountAsync(int clientNo, object userState) {
            if ((this.GetClientInternetAccountOperationCompleted == null)) {
                this.GetClientInternetAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientInternetAccountOperationCompleted);
            }
            this.InvokeAsync("GetClientInternetAccount", new object[] {
                        clientNo}, this.GetClientInternetAccountOperationCompleted, userState);
        }
        
        private void OnGetClientInternetAccountOperationCompleted(object arg) {
            if ((this.GetClientInternetAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientInternetAccountCompleted(this, new GetClientInternetAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientAccountsAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientAccountsAll(int clientNo) {
            object[] results = this.Invoke("GetClientAccountsAll", new object[] {
                        clientNo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientAccountsAllAsync(int clientNo) {
            this.GetClientAccountsAllAsync(clientNo, null);
        }
        
        /// <remarks/>
        public void GetClientAccountsAllAsync(int clientNo, object userState) {
            if ((this.GetClientAccountsAllOperationCompleted == null)) {
                this.GetClientAccountsAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientAccountsAllOperationCompleted);
            }
            this.InvokeAsync("GetClientAccountsAll", new object[] {
                        clientNo}, this.GetClientAccountsAllOperationCompleted, userState);
        }
        
        private void OnGetClientAccountsAllOperationCompleted(object arg) {
            if ((this.GetClientAccountsAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientAccountsAllCompleted(this, new GetClientAccountsAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientAccountsForTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientAccountsForTransfer(int clientNo) {
            object[] results = this.Invoke("GetClientAccountsForTransfer", new object[] {
                        clientNo});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientAccountsForTransferAsync(int clientNo) {
            this.GetClientAccountsForTransferAsync(clientNo, null);
        }
        
        /// <remarks/>
        public void GetClientAccountsForTransferAsync(int clientNo, object userState) {
            if ((this.GetClientAccountsForTransferOperationCompleted == null)) {
                this.GetClientAccountsForTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientAccountsForTransferOperationCompleted);
            }
            this.InvokeAsync("GetClientAccountsForTransfer", new object[] {
                        clientNo}, this.GetClientAccountsForTransferOperationCompleted, userState);
        }
        
        private void OnGetClientAccountsForTransferOperationCompleted(object arg) {
            if ((this.GetClientAccountsForTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientAccountsForTransferCompleted(this, new GetClientAccountsForTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientPassportData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientPassportData(string passpost) {
            object[] results = this.Invoke("GetClientPassportData", new object[] {
                        passpost});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientPassportDataAsync(string passpost) {
            this.GetClientPassportDataAsync(passpost, null);
        }
        
        /// <remarks/>
        public void GetClientPassportDataAsync(string passpost, object userState) {
            if ((this.GetClientPassportDataOperationCompleted == null)) {
                this.GetClientPassportDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientPassportDataOperationCompleted);
            }
            this.InvokeAsync("GetClientPassportData", new object[] {
                        passpost}, this.GetClientPassportDataOperationCompleted, userState);
        }
        
        private void OnGetClientPassportDataOperationCompleted(object arg) {
            if ((this.GetClientPassportDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientPassportDataCompleted(this, new GetClientPassportDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientFacsimile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer GetClientFacsimile([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> client_no, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> rec_id, int facs_type) {
            object[] results = this.Invoke("GetClientFacsimile", new object[] {
                        client_no,
                        rec_id,
                        facs_type});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientFacsimileAsync(System.Nullable<int> client_no, System.Nullable<int> rec_id, int facs_type) {
            this.GetClientFacsimileAsync(client_no, rec_id, facs_type, null);
        }
        
        /// <remarks/>
        public void GetClientFacsimileAsync(System.Nullable<int> client_no, System.Nullable<int> rec_id, int facs_type, object userState) {
            if ((this.GetClientFacsimileOperationCompleted == null)) {
                this.GetClientFacsimileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientFacsimileOperationCompleted);
            }
            this.InvokeAsync("GetClientFacsimile", new object[] {
                        client_no,
                        rec_id,
                        facs_type}, this.GetClientFacsimileOperationCompleted, userState);
        }
        
        private void OnGetClientFacsimileOperationCompleted(object arg) {
            if ((this.GetClientFacsimileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientFacsimileCompleted(this, new GetClientFacsimileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientFacsimileUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ODBAnswer ClientFacsimileUpdate(int rec_id, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] imageData) {
            object[] results = this.Invoke("ClientFacsimileUpdate", new object[] {
                        rec_id,
                        imageData});
            return ((ODBAnswer)(results[0]));
        }
        
        /// <remarks/>
        public void ClientFacsimileUpdateAsync(int rec_id, byte[] imageData) {
            this.ClientFacsimileUpdateAsync(rec_id, imageData, null);
        }
        
        /// <remarks/>
        public void ClientFacsimileUpdateAsync(int rec_id, byte[] imageData, object userState) {
            if ((this.ClientFacsimileUpdateOperationCompleted == null)) {
                this.ClientFacsimileUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientFacsimileUpdateOperationCompleted);
            }
            this.InvokeAsync("ClientFacsimileUpdate", new object[] {
                        rec_id,
                        imageData}, this.ClientFacsimileUpdateOperationCompleted, userState);
        }
        
        private void OnClientFacsimileUpdateOperationCompleted(object arg) {
            if ((this.ClientFacsimileUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientFacsimileUpdateCompleted(this, new ClientFacsimileUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ODBAnswer {
        
        private int answerCodeField;
        
        private object answerDataField;
        
        private System.Data.DataSet answerDataSetField;
        
        /// <remarks/>
        public int AnswerCode {
            get {
                return this.answerCodeField;
            }
            set {
                this.answerCodeField = value;
            }
        }
        
        /// <remarks/>
        public object AnswerData {
            get {
                return this.answerDataField;
            }
            set {
                this.answerDataField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet AnswerDataSet {
            get {
                return this.answerDataSetField;
            }
            set {
                this.answerDataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MofCheckClientAccount {
        
        private string pERSONAL_IDField;
        
        private string aCCOUNT_IBANField;
        
        /// <remarks/>
        public string PERSONAL_ID {
            get {
                return this.pERSONAL_IDField;
            }
            set {
                this.pERSONAL_IDField = value;
            }
        }
        
        /// <remarks/>
        public string ACCOUNT_IBAN {
            get {
                return this.aCCOUNT_IBANField;
            }
            set {
                this.aCCOUNT_IBANField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ODBAnswerCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        CommunicationError,
        
        /// <remarks/>
        SecurityError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ClientFacsimilePictureAddCompletedEventHandler(object sender, ClientFacsimilePictureAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientFacsimilePictureAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientFacsimilePictureAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ClientDataUpdateIBankCompletedEventHandler(object sender, ClientDataUpdateIBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientDataUpdateIBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientDataUpdateIBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ClientPhoneUpdateCompletedEventHandler(object sender, ClientPhoneUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientPhoneUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientPhoneUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ClientRelationAddCompletedEventHandler(object sender, ClientRelationAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientRelationAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientRelationAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ClientSignerAddCompletedEventHandler(object sender, ClientSignerAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientSignerAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientSignerAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void UpdateClientRegInfoCompletedEventHandler(object sender, UpdateClientRegInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClientRegInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClientRegInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void UpdateClientForNaprCompletedEventHandler(object sender, UpdateClientForNaprCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClientForNaprCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClientForNaprCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void VipAnswerCompletedEventHandler(object sender, VipAnswerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VipAnswerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VipAnswerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void VipDepositAnswerCompletedEventHandler(object sender, VipDepositAnswerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VipDepositAnswerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VipDepositAnswerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void jur_smsCompletedEventHandler(object sender, jur_smsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class jur_smsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal jur_smsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetErrorDescriptionCompletedEventHandler(object sender, GetErrorDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetErrorDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetErrorDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void IsWorkDayCompletedEventHandler(object sender, IsWorkDayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsWorkDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsWorkDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void IsWorkTimeCompletedEventHandler(object sender, IsWorkTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsWorkTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsWorkTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetStampCompletedEventHandler(object sender, GetStampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SendEmailCompletedEventHandler(object sender, SendEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void RestrictedCountryCheckCompletedEventHandler(object sender, RestrictedCountryCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestrictedCountryCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestrictedCountryCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetSaldoListCompletedEventHandler(object sender, GetSaldoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSaldoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSaldoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetTransactionCompletedEventHandler(object sender, GetTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetTransaction2CompletedEventHandler(object sender, GetTransaction2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransaction2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransaction2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetTransactionByForeignIDCompletedEventHandler(object sender, GetTransactionByForeignIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionByForeignIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionByForeignIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetTransactionByForeignID2CompletedEventHandler(object sender, GetTransactionByForeignID2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionByForeignID2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionByForeignID2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetTransactionAdvCompletedEventHandler(object sender, GetTransactionAdvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionAdvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionAdvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CheckTransactionCompletedEventHandler(object sender, CheckTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetCorrBanksCompletedEventHandler(object sender, GetCorrBanksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCorrBanksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCorrBanksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetPayedSalaryCompletedEventHandler(object sender, GetPayedSalaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayedSalaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayedSalaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAmountsForConvertationCompletedEventHandler(object sender, GetAmountsForConvertationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAmountsForConvertationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAmountsForConvertationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAmountForUFCCompletedEventHandler(object sender, GetAmountForUFCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAmountForUFCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAmountForUFCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetTreasuryCodeListCompletedEventHandler(object sender, GetTreasuryCodeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreasuryCodeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreasuryCodeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ODBAnswerCodeWrapperCompletedEventHandler(object sender, ODBAnswerCodeWrapperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ODBAnswerCodeWrapperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ODBAnswerCodeWrapperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswerCode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswerCode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void MofCheckClientAccountCompletedEventHandler(object sender, MofCheckClientAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MofCheckClientAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MofCheckClientAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MofCheckClientAccount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MofCheckClientAccount[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetOperationsByOpCodeCompletedEventHandler(object sender, GetOperationsByOpCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperationsByOpCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperationsByOpCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AddDocCompletedEventHandler(object sender, AddDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CheckDocCompletedEventHandler(object sender, CheckDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AddConvDocCompletedEventHandler(object sender, AddConvDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddConvDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddConvDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteDocCompletedEventHandler(object sender, DeleteDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CreateAccountCompletedEventHandler(object sender, CreateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CreateAccount_newCompletedEventHandler(object sender, CreateAccount_newCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccount_newCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccount_newCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CreateAccount_multiCompletedEventHandler(object sender, CreateAccount_multiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccount_multiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccount_multiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CreateAccountwithProduct_multiCompletedEventHandler(object sender, CreateAccountwithProduct_multiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccountwithProduct_multiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccountwithProduct_multiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CreateAccountForLoansCompletedEventHandler(object sender, CreateAccountForLoansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccountForLoansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccountForLoansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CreateAccountForLoans2CompletedEventHandler(object sender, CreateAccountForLoans2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccountForLoans2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccountForLoans2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CreateAccountByCurentAccCompletedEventHandler(object sender, CreateAccountByCurentAccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccountByCurentAccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccountByCurentAccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAccountIDCompletedEventHandler(object sender, GetAccountIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAccountID2CompletedEventHandler(object sender, GetAccountID2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountID2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountID2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetCorrAccountIDCompletedEventHandler(object sender, GetCorrAccountIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCorrAccountIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCorrAccountIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAccountID_IBANCompletedEventHandler(object sender, GetAccountID_IBANCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountID_IBANCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountID_IBANCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAccountListByIbanCompletedEventHandler(object sender, GetAccountListByIbanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountListByIbanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountListByIbanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetTarifAmount4viewCompletedEventHandler(object sender, GetTarifAmount4viewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTarifAmount4viewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTarifAmount4viewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void chk_books_for_accountCompletedEventHandler(object sender, chk_books_for_accountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chk_books_for_accountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chk_books_for_accountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void chk_book_getCompletedEventHandler(object sender, chk_book_getCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chk_book_getCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chk_book_getCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAccountCompletedEventHandler(object sender, GetAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAccountForTransferCompletedEventHandler(object sender, GetAccountForTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountForTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountForTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAccountSaldoCompletedEventHandler(object sender, GetAccountSaldoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountSaldoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountSaldoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAccountStatementCompletedEventHandler(object sender, GetAccountStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientStatementCompletedEventHandler(object sender, GetClientStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAccountStatementExtendedCompletedEventHandler(object sender, GetAccountStatementExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountStatementExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountStatementExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAccountStatementPagedCompletedEventHandler(object sender, GetAccountStatementPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountStatementPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountStatementPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAccountStatementExtendedPagedCompletedEventHandler(object sender, GetAccountStatementExtendedPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountStatementExtendedPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountStatementExtendedPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientStatementXmlCompletedEventHandler(object sender, GetClientStatementXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientStatementXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientStatementXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientLastTransactionsCompletedEventHandler(object sender, GetClientLastTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientLastTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientLastTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAccountTurnoverCompletedEventHandler(object sender, GetAccountTurnoverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountTurnoverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountTurnoverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetBalAccTurnoverCompletedEventHandler(object sender, GetBalAccTurnoverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBalAccTurnoverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBalAccTurnoverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAccountCreditOpsCompletedEventHandler(object sender, GetAccountCreditOpsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountCreditOpsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountCreditOpsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AccountAttributeAddCompletedEventHandler(object sender, AccountAttributeAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountAttributeAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountAttributeAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AccountAttributeDeleteCompletedEventHandler(object sender, AccountAttributeDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountAttributeDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountAttributeDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AccountSetControlCompletedEventHandler(object sender, AccountSetControlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountSetControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountSetControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDepositsCompletedEventHandler(object sender, GetDepositsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepositsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepositsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDepositCompletedEventHandler(object sender, GetDepositCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepositCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepositCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDepositAccrualGraphCompletedEventHandler(object sender, GetDepositAccrualGraphCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepositAccrualGraphCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepositAccrualGraphCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDepositsEfectiveIntrateCompletedEventHandler(object sender, GetDepositsEfectiveIntrateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepositsEfectiveIntrateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepositsEfectiveIntrateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDepositAccountOvernightAmountCompletedEventHandler(object sender, GetDepositAccountOvernightAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepositAccountOvernightAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepositAccountOvernightAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DepositAddAmountCompletedEventHandler(object sender, DepositAddAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepositAddAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepositAddAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetLoanRemaindAmountsCompletedEventHandler(object sender, GetLoanRemaindAmountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoanRemaindAmountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoanRemaindAmountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientHaveProblemLoanCompletedEventHandler(object sender, GetClientHaveProblemLoanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientHaveProblemLoanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientHaveProblemLoanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetCommisionDebtCompletedEventHandler(object sender, GetCommisionDebtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommisionDebtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommisionDebtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientDebtCompletedEventHandler(object sender, GetClientDebtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientDebtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientDebtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void BankOpenDateCompletedEventHandler(object sender, BankOpenDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankOpenDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankOpenDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void TreasureInfoCompletedEventHandler(object sender, TreasureInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TreasureInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TreasureInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetRatesCompletedEventHandler(object sender, GetRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetCurrentRatesCompletedEventHandler(object sender, GetCurrentRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetCrossRatesCompletedEventHandler(object sender, GetCrossRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCrossRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCrossRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetExchangeRatesCompletedEventHandler(object sender, GetExchangeRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExchangeRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExchangeRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetRatesHistoryCompletedEventHandler(object sender, GetRatesHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRatesHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRatesHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetCrossRatesKasCompletedEventHandler(object sender, GetCrossRatesKasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCrossRatesKasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCrossRatesKasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetBanksCompletedEventHandler(object sender, GetBanksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBanksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBanksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetCodesForRubCompletedEventHandler(object sender, GetCodesForRubCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCodesForRubCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCodesForRubCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetBankCompletedEventHandler(object sender, GetBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetForeignBanksCompletedEventHandler(object sender, GetForeignBanksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForeignBanksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForeignBanksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetCountriesCompletedEventHandler(object sender, GetCountriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDeptsCompletedEventHandler(object sender, GetDeptsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeptsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeptsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetUsersCompletedEventHandler(object sender, GetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ClientReopenCompletedEventHandler(object sender, ClientReopenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientReopenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientReopenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AddClientCompletedEventHandler(object sender, AddClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AddClientMinimalCompletedEventHandler(object sender, AddClientMinimalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddClientMinimalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddClientMinimalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ClientAttributeAddCompletedEventHandler(object sender, ClientAttributeAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientAttributeAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientAttributeAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ClientAttributeDeleteCompletedEventHandler(object sender, ClientAttributeDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientAttributeDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientAttributeDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ClientExtensionsAddMinimalCompletedEventHandler(object sender, ClientExtensionsAddMinimalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientExtensionsAddMinimalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientExtensionsAddMinimalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientInfoCompletedEventHandler(object sender, GetClientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientInfoEmployerCompletedEventHandler(object sender, GetClientInfoEmployerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientInfoEmployerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientInfoEmployerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientInfoByPIDCompletedEventHandler(object sender, GetClientInfoByPIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientInfoByPIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientInfoByPIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientInfoFatcaByPIDCompletedEventHandler(object sender, GetClientInfoFatcaByPIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientInfoFatcaByPIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientInfoFatcaByPIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientConsolidatedStatementCompletedEventHandler(object sender, GetClientConsolidatedStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientConsolidatedStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientConsolidatedStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientIncassoCompletedEventHandler(object sender, GetClientIncassoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientIncassoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientIncassoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientSequestrationCompletedEventHandler(object sender, GetClientSequestrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientSequestrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientSequestrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetRelatedClientsCompletedEventHandler(object sender, GetRelatedClientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelatedClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelatedClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientCardsCompletedEventHandler(object sender, GetClientCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAccountCardsCompletedEventHandler(object sender, GetAccountCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientAccountsCompletedEventHandler(object sender, GetClientAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientAccountsD8CompletedEventHandler(object sender, GetClientAccountsD8CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientAccountsD8CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientAccountsD8CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientInternetAccountCompletedEventHandler(object sender, GetClientInternetAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientInternetAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientInternetAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientAccountsAllCompletedEventHandler(object sender, GetClientAccountsAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientAccountsAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientAccountsAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientAccountsForTransferCompletedEventHandler(object sender, GetClientAccountsForTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientAccountsForTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientAccountsForTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientPassportDataCompletedEventHandler(object sender, GetClientPassportDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientPassportDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientPassportDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetClientFacsimileCompletedEventHandler(object sender, GetClientFacsimileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientFacsimileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientFacsimileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ClientFacsimileUpdateCompletedEventHandler(object sender, ClientFacsimileUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientFacsimileUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientFacsimileUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ODBAnswer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ODBAnswer)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591